{"ast":null,"code":"import { executeQuery } from './neo4jConnection';\nexport async function getInitialState() {\n  try {\n    const result = await executeQuery('MATCH (r:Room) RETURN r');\n    console.log('Données récupérées:', result);\n    if (!result || !Array.isArray(result)) {\n      throw new Error('Format de données inattendu');\n    }\n    return result.map(record => ({\n      name: record.r ? record.r.properties.name : '',\n      // Retourner une chaîne vide si le nom n'est pas défini\n      occupants: [] // Adaptez cette partie selon votre modèle de données\n    }));\n  } catch (error) {\n    console.error('Erreur lors de la récupération des données:', error);\n    console.log('Données avant transformation:', result);\n    return []; // Retournez un tableau vide en cas d'erreur\n  }\n}\nexport async function checkHypothesis(suspect, weapon, room) {\n  try {\n    const result = await executeQuery(`MATCH (s:Suspect {name: $suspect}), (w:Weapon {name: $weapon}), (r:Room {name: $room})\n             RETURN s, w, r`, {\n      suspect,\n      weapon,\n      room\n    });\n    console.log('Résultat de l\\'hypothèse:', result);\n    if (!result || !Array.isArray(result)) {\n      throw new Error('Format de données inattendu');\n    }\n    return result.length > 0;\n  } catch (error) {\n    console.error('Erreur lors de la vérification de l\\'hypothèse:', error);\n    return false; // Retournez false en cas d'erreur\n  }\n}","map":{"version":3,"names":["executeQuery","getInitialState","result","console","log","Array","isArray","Error","map","record","name","r","properties","occupants","error","checkHypothesis","suspect","weapon","room","length"],"sources":["C:/Users/gelgo/Documents/IUT/BUT3/R5.10 - Nouveaux paradigmes de BDD/cluedo-game/src/gameLogic.js"],"sourcesContent":["import { executeQuery } from './neo4jConnection';\r\n\r\nexport async function getInitialState() {\r\n    try {\r\n        const result = await executeQuery('MATCH (r:Room) RETURN r');\r\n        console.log('Données récupérées:', result);\r\n        if (!result || !Array.isArray(result)) {\r\n            throw new Error('Format de données inattendu');\r\n        }\r\n        return result.map(record => ({\r\n            name: record.r ? record.r.properties.name : '', // Retourner une chaîne vide si le nom n'est pas défini\r\n            occupants: [] // Adaptez cette partie selon votre modèle de données\r\n        }));\r\n    } catch (error) {\r\n        console.error('Erreur lors de la récupération des données:', error);\r\n        console.log('Données avant transformation:', result);\r\n        return []; // Retournez un tableau vide en cas d'erreur\r\n    }\r\n}\r\n\r\nexport async function checkHypothesis(suspect, weapon, room) {\r\n    try {\r\n        const result = await executeQuery(\r\n            `MATCH (s:Suspect {name: $suspect}), (w:Weapon {name: $weapon}), (r:Room {name: $room})\r\n             RETURN s, w, r`,\r\n            { suspect, weapon, room }\r\n        );\r\n        console.log('Résultat de l\\'hypothèse:', result);\r\n        if (!result || !Array.isArray(result)) {\r\n            throw new Error('Format de données inattendu');\r\n        }\r\n        return result.length > 0;\r\n    } catch (error) {\r\n        console.error('Erreur lors de la vérification de l\\'hypothèse:', error);\r\n        return false; // Retournez false en cas d'erreur\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,mBAAmB;AAEhD,OAAO,eAAeC,eAAeA,CAAA,EAAG;EACpC,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMF,YAAY,CAAC,yBAAyB,CAAC;IAC5DG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,MAAM,CAAC;IAC1C,IAAI,CAACA,MAAM,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;MACnC,MAAM,IAAIK,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,OAAOL,MAAM,CAACM,GAAG,CAACC,MAAM,KAAK;MACzBC,IAAI,EAAED,MAAM,CAACE,CAAC,GAAGF,MAAM,CAACE,CAAC,CAACC,UAAU,CAACF,IAAI,GAAG,EAAE;MAAE;MAChDG,SAAS,EAAE,EAAE,CAAC;IAClB,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZX,OAAO,CAACW,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACnEX,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,MAAM,CAAC;IACpD,OAAO,EAAE,CAAC,CAAC;EACf;AACJ;AAEA,OAAO,eAAea,eAAeA,CAACC,OAAO,EAAEC,MAAM,EAAEC,IAAI,EAAE;EACzD,IAAI;IACA,MAAMhB,MAAM,GAAG,MAAMF,YAAY,CAC7B;AACZ,4BAA4B,EAChB;MAAEgB,OAAO;MAAEC,MAAM;MAAEC;IAAK,CAC5B,CAAC;IACDf,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,MAAM,CAAC;IAChD,IAAI,CAACA,MAAM,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;MACnC,MAAM,IAAIK,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,OAAOL,MAAM,CAACiB,MAAM,GAAG,CAAC;EAC5B,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZX,OAAO,CAACW,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;IACvE,OAAO,KAAK,CAAC,CAAC;EAClB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}