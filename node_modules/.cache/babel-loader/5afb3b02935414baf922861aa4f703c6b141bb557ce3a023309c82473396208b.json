{"ast":null,"code":"import neo4j from 'neo4j-driver';\nconst url = 'neo4j://localhost:7687'; // URL de Bolt\nconst user = 'neo4j';\nconst password = 'lecluedo';\n\n// Création du driver Neo4j\nconst driver = neo4j.driver(url, neo4j.auth.basic(user, password));\n\n// Fonction pour exécuter une requête\nexport async function executeQuery(query) {\n  const session = driver.session(); // Ouvre une session\n  try {\n    const result = await session.run(query); // Exécute la requête Cypher\n    return result.records.map(record => record.toObject()); // Traite les résultats\n  } catch (error) {\n    console.error('Error executing query:', error);\n    throw error; // Laisse l'erreur remonter\n  } finally {\n    await session.close(); // Ferme la session après utilisation\n  }\n}\n\n// Ferme le driver lorsque tu n'en as plus besoin (par exemple, à la fermeture de l'application)\nexport function closeDriver() {\n  driver.close();\n}","map":{"version":3,"names":["neo4j","url","user","password","driver","auth","basic","executeQuery","query","session","result","run","records","map","record","toObject","error","console","close","closeDriver"],"sources":["C:/Users/gelgo/Documents/IUT/BUT3/R5.10 - Nouveaux paradigmes de BDD/cluedo-game/src/neo4jConnection.js"],"sourcesContent":["import neo4j from 'neo4j-driver';\r\n\r\nconst url = 'neo4j://localhost:7687'; // URL de Bolt\r\nconst user = 'neo4j';\r\nconst password = 'lecluedo';\r\n\r\n// Création du driver Neo4j\r\nconst driver = neo4j.driver(url, neo4j.auth.basic(user, password));\r\n\r\n// Fonction pour exécuter une requête\r\nexport async function executeQuery(query) {\r\n    const session = driver.session(); // Ouvre une session\r\n    try {\r\n        const result = await session.run(query); // Exécute la requête Cypher\r\n        return result.records.map(record => record.toObject()); // Traite les résultats\r\n    } catch (error) {\r\n        console.error('Error executing query:', error);\r\n        throw error; // Laisse l'erreur remonter\r\n    } finally {\r\n        await session.close(); // Ferme la session après utilisation\r\n    }\r\n}\r\n\r\n// Ferme le driver lorsque tu n'en as plus besoin (par exemple, à la fermeture de l'application)\r\nexport function closeDriver() {\r\n    driver.close();\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,cAAc;AAEhC,MAAMC,GAAG,GAAG,wBAAwB,CAAC,CAAC;AACtC,MAAMC,IAAI,GAAG,OAAO;AACpB,MAAMC,QAAQ,GAAG,UAAU;;AAE3B;AACA,MAAMC,MAAM,GAAGJ,KAAK,CAACI,MAAM,CAACH,GAAG,EAAED,KAAK,CAACK,IAAI,CAACC,KAAK,CAACJ,IAAI,EAAEC,QAAQ,CAAC,CAAC;;AAElE;AACA,OAAO,eAAeI,YAAYA,CAACC,KAAK,EAAE;EACtC,MAAMC,OAAO,GAAGL,MAAM,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;EAClC,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMD,OAAO,CAACE,GAAG,CAACH,KAAK,CAAC,CAAC,CAAC;IACzC,OAAOE,MAAM,CAACE,OAAO,CAACC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK,CAAC,CAAC;EACjB,CAAC,SAAS;IACN,MAAMP,OAAO,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3B;AACJ;;AAEA;AACA,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC1Bf,MAAM,CAACc,KAAK,CAAC,CAAC;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}