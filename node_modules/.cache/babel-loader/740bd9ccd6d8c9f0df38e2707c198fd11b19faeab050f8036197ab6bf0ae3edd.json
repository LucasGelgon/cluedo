{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_util_1 = require(\"./bolt-protocol-util\");\n// eslint-disable-next-line no-unused-vars\nvar channel_1 = require(\"../channel\");\nvar packstream_1 = require(\"../packstream\");\nvar request_message_1 = __importStar(require(\"./request-message\"));\nvar stream_observers_1 = require(\"./stream-observers\");\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar bolt_protocol_v1_transformer_1 = __importDefault(require(\"./bolt-protocol-v1.transformer\"));\nvar transformer_1 = __importDefault(require(\"./transformer\"));\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks,\n  _a = neo4j_driver_core_1.internal.constants,\n  ACCESS_MODE_WRITE = _a.ACCESS_MODE_WRITE,\n  BOLT_PROTOCOL_V1 = _a.BOLT_PROTOCOL_V1,\n  Logger = neo4j_driver_core_1.internal.logger.Logger,\n  TxConfig = neo4j_driver_core_1.internal.txConfig.TxConfig;\nvar BoltProtocol = /** @class */function () {\n  /**\n   * @callback CreateResponseHandler Creates the response handler\n   * @param {BoltProtocol} protocol The bolt protocol\n   * @returns {ResponseHandler} The response handler\n   */\n  /**\n   * @callback OnProtocolError Handles protocol error\n   * @param {string} error The description\n   */\n  /**\n   * @constructor\n   * @param {Object} server the server informatio.\n   * @param {Chunker} chunker the chunker.\n   * @param {Object} packstreamConfig Packstream configuration\n   * @param {boolean} packstreamConfig.disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\n   * @param {boolean} packstreamConfig.useBigInt if this connection should convert all received integers to native BigInt numbers.\n   * @param {CreateResponseHandler} createResponseHandler Function which creates the response handler\n   * @param {Logger} log the logger\n   * @param {OnProtocolError} onProtocolError handles protocol errors\n   */\n  function BoltProtocol(server, chunker, _a, createResponseHandler, log, onProtocolError) {\n    var _b = _a === void 0 ? {} : _a,\n      disableLosslessIntegers = _b.disableLosslessIntegers,\n      useBigInt = _b.useBigInt;\n    if (createResponseHandler === void 0) {\n      createResponseHandler = function () {\n        return null;\n      };\n    }\n    this._server = server || {};\n    this._chunker = chunker;\n    this._packer = this._createPacker(chunker);\n    this._unpacker = this._createUnpacker(disableLosslessIntegers, useBigInt);\n    this._responseHandler = createResponseHandler(this);\n    this._log = log;\n    this._onProtocolError = onProtocolError;\n    this._fatalError = null;\n    this._lastMessageSignature = null;\n    this._config = {\n      disableLosslessIntegers: disableLosslessIntegers,\n      useBigInt: useBigInt\n    };\n  }\n  Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n    get: function () {\n      var _this = this;\n      if (this._transformer === undefined) {\n        this._transformer = new transformer_1.default(Object.values(bolt_protocol_v1_transformer_1.default).map(function (create) {\n          return create(_this._config, _this._log);\n        }));\n      }\n      return this._transformer;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BoltProtocol.prototype, \"version\", {\n    /**\n     * Returns the numerical version identifier for this protocol\n     */\n    get: function () {\n      return BOLT_PROTOCOL_V1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BoltProtocol.prototype, \"supportsReAuth\", {\n    /**\n     * @property {boolean} supportsReAuth Either if the protocol version supports re-auth or not.\n     */\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BoltProtocol.prototype, \"initialized\", {\n    /**\n     * @property {boolean} initialized Either if the protocol was initialized or not\n     */\n    get: function () {\n      return !!this._initialized;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BoltProtocol.prototype, \"authToken\", {\n    /**\n     * @property {object} authToken The token used in the last login\n     */\n    get: function () {\n      return this._authToken;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Get the packer.\n   * @return {Packer} the protocol's packer.\n   */\n  BoltProtocol.prototype.packer = function () {\n    return this._packer;\n  };\n  /**\n   * Creates a packable function out of the provided value\n   * @param x the value to pack\n   * @returns Function\n   */\n  BoltProtocol.prototype.packable = function (x) {\n    return this._packer.packable(x, this.transformer.toStructure);\n  };\n  /**\n   * Get the unpacker.\n   * @return {Unpacker} the protocol's unpacker.\n   */\n  BoltProtocol.prototype.unpacker = function () {\n    return this._unpacker;\n  };\n  /**\n   * Unpack a buffer\n   * @param {Buffer} buf\n   * @returns {any|null} The unpacked value\n   */\n  BoltProtocol.prototype.unpack = function (buf) {\n    return this._unpacker.unpack(buf, this.transformer.fromStructure);\n  };\n  /**\n   * Transform metadata received in SUCCESS message before it is passed to the handler.\n   * @param {Object} metadata the received metadata.\n   * @return {Object} transformed metadata.\n   */\n  BoltProtocol.prototype.transformMetadata = function (metadata) {\n    return metadata;\n  };\n  /**\n   * Perform initialization and authentication of the underlying connection.\n   * @param {Object} param\n   * @param {string} param.userAgent the user agent.\n   * @param {Object} param.authToken the authentication token.\n   * @param {NotificationFilter} param.notificationFilter the notification filter.\n   * @param {function(err: Error)} param.onError the callback to invoke on error.\n   * @param {function()} param.onComplete the callback to invoke on completion.\n   * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n   */\n  BoltProtocol.prototype.initialize = function (_a) {\n    var _this = this;\n    var _b = _a === void 0 ? {} : _a,\n      userAgent = _b.userAgent,\n      boltAgent = _b.boltAgent,\n      authToken = _b.authToken,\n      notificationFilter = _b.notificationFilter,\n      onError = _b.onError,\n      onComplete = _b.onComplete;\n    var observer = new stream_observers_1.LoginObserver({\n      onError: function (error) {\n        return _this._onLoginError(error, onError);\n      },\n      onCompleted: function (metadata) {\n        return _this._onLoginCompleted(metadata, onComplete);\n      }\n    });\n    // passing notification filter on this protocol version throws an error\n    (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n    this.write(request_message_1.default.init(userAgent, authToken), observer, true);\n    return observer;\n  };\n  /**\n   * Performs logoff of the underlying connection\n   *\n   * @param {Object} param\n   * @param {function(err: Error)} param.onError the callback to invoke on error.\n   * @param {function()} param.onComplete the callback to invoke on completion.\n   * @param {boolean} param.flush whether to flush the buffered messages.\n   *\n   * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n   */\n  BoltProtocol.prototype.logoff = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      onComplete = _b.onComplete,\n      onError = _b.onError,\n      flush = _b.flush;\n    var observer = new stream_observers_1.LogoffObserver({\n      onCompleted: onComplete,\n      onError: onError\n    });\n    // TODO: Verify the Neo4j version in the message\n    var error = (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support logoff. ' + 'Please upgrade to Neo4j 5.5.0 or later in order to use this functionality.');\n    // unsupported API was used, consider this a fatal error for the current connection\n    this._onProtocolError(error.message);\n    observer.onError(error);\n    throw error;\n  };\n  /**\n   * Performs login of the underlying connection\n   *\n   * @param {Object} args\n   * @param {Object} args.authToken the authentication token.\n   * @param {function(err: Error)} args.onError the callback to invoke on error.\n   * @param {function()} args.onComplete the callback to invoke on completion.\n   * @param {boolean} args.flush whether to flush the buffered messages.\n   *\n   * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n   */\n  BoltProtocol.prototype.logon = function (_a) {\n    var _this = this;\n    var _b = _a === void 0 ? {} : _a,\n      authToken = _b.authToken,\n      onComplete = _b.onComplete,\n      onError = _b.onError,\n      flush = _b.flush;\n    var observer = new stream_observers_1.LoginObserver({\n      onCompleted: function () {\n        return _this._onLoginCompleted({}, authToken, onComplete);\n      },\n      onError: function (error) {\n        return _this._onLoginError(error, onError);\n      }\n    });\n    // TODO: Verify the Neo4j version in the message\n    var error = (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support logon. ' + 'Please upgrade to Neo4j 5.5.0 or later in order to use this functionality.');\n    // unsupported API was used, consider this a fatal error for the current connection\n    this._onProtocolError(error.message);\n    observer.onError(error);\n    throw error;\n  };\n  /**\n   * Perform protocol related operations for closing this connection\n   */\n  BoltProtocol.prototype.prepareToClose = function () {\n    // no need to notify the database in this protocol version\n  };\n  /**\n   * Begin an explicit transaction.\n   * @param {Object} param\n   * @param {Bookmarks} param.bookmarks the bookmarks.\n   * @param {TxConfig} param.txConfig the configuration.\n   * @param {string} param.database the target database name.\n   * @param {string} param.mode the access mode.\n   * @param {string} param.impersonatedUser the impersonated user\n   * @param {NotificationFilter} param.notificationFilter the notification filter.\n   * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\n   * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\n   * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\n   * @param {function()} param.afterComplete the callback to invoke after handling the completion.\n   * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n   */\n  BoltProtocol.prototype.beginTransaction = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      bookmarks = _b.bookmarks,\n      txConfig = _b.txConfig,\n      database = _b.database,\n      mode = _b.mode,\n      impersonatedUser = _b.impersonatedUser,\n      notificationFilter = _b.notificationFilter,\n      beforeError = _b.beforeError,\n      afterError = _b.afterError,\n      beforeComplete = _b.beforeComplete,\n      afterComplete = _b.afterComplete;\n    return this.run('BEGIN', bookmarks ? bookmarks.asBeginTransactionParameters() : {}, {\n      bookmarks: bookmarks,\n      txConfig: txConfig,\n      database: database,\n      mode: mode,\n      impersonatedUser: impersonatedUser,\n      notificationFilter: notificationFilter,\n      beforeError: beforeError,\n      afterError: afterError,\n      beforeComplete: beforeComplete,\n      afterComplete: afterComplete,\n      flush: false\n    });\n  };\n  /**\n   * Commit the explicit transaction.\n   * @param {Object} param\n   * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\n   * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\n   * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\n   * @param {function()} param.afterComplete the callback to invoke after handling the completion.\n   * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n   */\n  BoltProtocol.prototype.commitTransaction = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      beforeError = _b.beforeError,\n      afterError = _b.afterError,\n      beforeComplete = _b.beforeComplete,\n      afterComplete = _b.afterComplete;\n    // WRITE access mode is used as a place holder here, it has\n    // no effect on behaviour for Bolt V1 & V2\n    return this.run('COMMIT', {}, {\n      bookmarks: Bookmarks.empty(),\n      txConfig: TxConfig.empty(),\n      mode: ACCESS_MODE_WRITE,\n      beforeError: beforeError,\n      afterError: afterError,\n      beforeComplete: beforeComplete,\n      afterComplete: afterComplete\n    });\n  };\n  /**\n   * Rollback the explicit transaction.\n   * @param {Object} param\n   * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\n   * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\n   * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\n   * @param {function()} param.afterComplete the callback to invoke after handling the completion.\n   * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n   */\n  BoltProtocol.prototype.rollbackTransaction = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      beforeError = _b.beforeError,\n      afterError = _b.afterError,\n      beforeComplete = _b.beforeComplete,\n      afterComplete = _b.afterComplete;\n    // WRITE access mode is used as a place holder here, it has\n    // no effect on behaviour for Bolt V1 & V2\n    return this.run('ROLLBACK', {}, {\n      bookmarks: Bookmarks.empty(),\n      txConfig: TxConfig.empty(),\n      mode: ACCESS_MODE_WRITE,\n      beforeError: beforeError,\n      afterError: afterError,\n      beforeComplete: beforeComplete,\n      afterComplete: afterComplete\n    });\n  };\n  /**\n   * Send a Cypher query through the underlying connection.\n   * @param {string} query the cypher query.\n   * @param {Object} parameters the query parameters.\n   * @param {Object} param\n   * @param {Bookmarks} param.bookmarks the bookmarks.\n   * @param {TxConfig} param.txConfig the transaction configuration.\n   * @param {string} param.database the target database name.\n   * @param {string} param.impersonatedUser the impersonated user\n   * @param {NotificationFilter} param.notificationFilter the notification filter.\n   * @param {string} param.mode the access mode.\n   * @param {function(keys: string[])} param.beforeKeys the callback to invoke before handling the keys.\n   * @param {function(keys: string[])} param.afterKeys the callback to invoke after handling the keys.\n   * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\n   * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\n   * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\n   * @param {function()} param.afterComplete the callback to invoke after handling the completion.\n   * @param {boolean} param.flush whether to flush the buffered messages.\n   * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n   */\n  BoltProtocol.prototype.run = function (query, parameters, _a) {\n    var _b = _a === void 0 ? {} : _a,\n      bookmarks = _b.bookmarks,\n      txConfig = _b.txConfig,\n      database = _b.database,\n      mode = _b.mode,\n      impersonatedUser = _b.impersonatedUser,\n      notificationFilter = _b.notificationFilter,\n      beforeKeys = _b.beforeKeys,\n      afterKeys = _b.afterKeys,\n      beforeError = _b.beforeError,\n      afterError = _b.afterError,\n      beforeComplete = _b.beforeComplete,\n      afterComplete = _b.afterComplete,\n      _c = _b.flush,\n      flush = _c === void 0 ? true : _c,\n      _d = _b.highRecordWatermark,\n      highRecordWatermark = _d === void 0 ? Number.MAX_VALUE : _d,\n      _e = _b.lowRecordWatermark,\n      lowRecordWatermark = _e === void 0 ? Number.MAX_VALUE : _e;\n    var observer = new stream_observers_1.ResultStreamObserver({\n      server: this._server,\n      beforeKeys: beforeKeys,\n      afterKeys: afterKeys,\n      beforeError: beforeError,\n      afterError: afterError,\n      beforeComplete: beforeComplete,\n      afterComplete: afterComplete,\n      highRecordWatermark: highRecordWatermark,\n      lowRecordWatermark: lowRecordWatermark\n    });\n    // bookmarks and mode are ignored in this version of the protocol\n    (0, bolt_protocol_util_1.assertTxConfigIsEmpty)(txConfig, this._onProtocolError, observer);\n    // passing in a database name on this protocol version throws an error\n    (0, bolt_protocol_util_1.assertDatabaseIsEmpty)(database, this._onProtocolError, observer);\n    // passing impersonated user on this protocol version throws an error\n    (0, bolt_protocol_util_1.assertImpersonatedUserIsEmpty)(impersonatedUser, this._onProtocolError, observer);\n    // passing notification filter on this protocol version throws an error\n    (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n    this.write(request_message_1.default.run(query, parameters), observer, false);\n    this.write(request_message_1.default.pullAll(), observer, flush);\n    return observer;\n  };\n  Object.defineProperty(BoltProtocol.prototype, \"currentFailure\", {\n    get: function () {\n      return this._responseHandler.currentFailure;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Send a RESET through the underlying connection.\n   * @param {Object} param\n   * @param {function(err: Error)} param.onError the callback to invoke on error.\n   * @param {function()} param.onComplete the callback to invoke on completion.\n   * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n   */\n  BoltProtocol.prototype.reset = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      onError = _b.onError,\n      onComplete = _b.onComplete;\n    var observer = new stream_observers_1.ResetObserver({\n      onProtocolError: this._onProtocolError,\n      onError: onError,\n      onComplete: onComplete\n    });\n    this.write(request_message_1.default.reset(), observer, true);\n    return observer;\n  };\n  /**\n   * Send a TELEMETRY through the underlying connection.\n   *\n   * @param {object} param0 Message params\n   * @param {number} param0.api The API called\n   * @param {object} param1 Configuration and callbacks\n   * @param {function()} param1.onCompleted Called when completed\n   * @param {function()} param1.onError Called when error\n   * @return {StreamObserver} the stream observer that monitors the corresponding server response.\n   */\n  BoltProtocol.prototype.telemetry = function (_a, _b) {\n    var api = _a.api;\n    var _c = _b === void 0 ? {} : _b,\n      onError = _c.onError,\n      onCompleted = _c.onCompleted;\n    var observer = new stream_observers_1.CompletedObserver();\n    if (onCompleted) {\n      onCompleted();\n    }\n    return observer;\n  };\n  BoltProtocol.prototype._createPacker = function (chunker) {\n    return new packstream_1.v1.Packer(chunker);\n  };\n  BoltProtocol.prototype._createUnpacker = function (disableLosslessIntegers, useBigInt) {\n    return new packstream_1.v1.Unpacker(disableLosslessIntegers, useBigInt);\n  };\n  /**\n   * Write a message to the network channel.\n   * @param {RequestMessage} message the message to write.\n   * @param {StreamObserver} observer the response observer.\n   * @param {boolean} flush `true` if flush should happen after the message is written to the buffer.\n   */\n  BoltProtocol.prototype.write = function (message, observer, flush) {\n    var queued = this.queueObserverIfProtocolIsNotBroken(observer);\n    if (queued) {\n      if (this._log.isDebugEnabled()) {\n        this._log.debug(\"C: \".concat(message));\n      }\n      this._lastMessageSignature = message.signature;\n      var messageStruct = new packstream_1.structure.Structure(message.signature, message.fields);\n      this.packable(messageStruct)();\n      this._chunker.messageBoundary();\n      if (flush) {\n        this._chunker.flush();\n      }\n    }\n  };\n  BoltProtocol.prototype.isLastMessageLogon = function () {\n    return this._lastMessageSignature === request_message_1.SIGNATURES.HELLO || this._lastMessageSignature === request_message_1.SIGNATURES.LOGON;\n  };\n  BoltProtocol.prototype.isLastMessageReset = function () {\n    return this._lastMessageSignature === request_message_1.SIGNATURES.RESET;\n  };\n  /**\n   * Notifies faltal erros to the observers and mark the protocol in the fatal error state.\n   * @param {Error} error The error\n   */\n  BoltProtocol.prototype.notifyFatalError = function (error) {\n    this._fatalError = error;\n    return this._responseHandler._notifyErrorToObservers(error);\n  };\n  /**\n   * Updates the the current observer with the next one on the queue.\n   */\n  BoltProtocol.prototype.updateCurrentObserver = function () {\n    return this._responseHandler._updateCurrentObserver();\n  };\n  /**\n   * Checks if exist an ongoing observable requests\n   * @return {boolean}\n   */\n  BoltProtocol.prototype.hasOngoingObservableRequests = function () {\n    return this._responseHandler.hasOngoingObservableRequests();\n  };\n  /**\n   * Enqueue the observer if the protocol is not broken.\n   * In case it's broken, the observer will be notified about the error.\n   *\n   * @param {StreamObserver} observer The observer\n   * @returns {boolean} if it was queued\n   */\n  BoltProtocol.prototype.queueObserverIfProtocolIsNotBroken = function (observer) {\n    if (this.isBroken()) {\n      this.notifyFatalErrorToObserver(observer);\n      return false;\n    }\n    return this._responseHandler._queueObserver(observer);\n  };\n  /**\n   * Veritfy the protocol is not broken.\n   * @returns {boolean}\n   */\n  BoltProtocol.prototype.isBroken = function () {\n    return !!this._fatalError;\n  };\n  /**\n   * Notifies the current fatal error to the observer\n   *\n   * @param {StreamObserver} observer The observer\n   */\n  BoltProtocol.prototype.notifyFatalErrorToObserver = function (observer) {\n    if (observer && observer.onError) {\n      observer.onError(this._fatalError);\n    }\n  };\n  /**\n   * Reset current failure on the observable response handler to null.\n   */\n  BoltProtocol.prototype.resetFailure = function () {\n    this._responseHandler._resetFailure();\n  };\n  BoltProtocol.prototype._onLoginCompleted = function (metadata, authToken, onCompleted) {\n    this._initialized = true;\n    this._authToken = authToken;\n    if (metadata) {\n      var serverVersion = metadata.server;\n      if (!this._server.version) {\n        this._server.version = serverVersion;\n      }\n    }\n    if (onCompleted) {\n      onCompleted(metadata);\n    }\n  };\n  BoltProtocol.prototype._onLoginError = function (error, onError) {\n    this._onProtocolError(error.message);\n    if (onError) {\n      onError(error);\n    }\n  };\n  return BoltProtocol;\n}();\nexports.default = BoltProtocol;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","bolt_protocol_util_1","require","channel_1","packstream_1","request_message_1","stream_observers_1","neo4j_driver_core_1","bolt_protocol_v1_transformer_1","transformer_1","Bookmarks","internal","bookmarks","_a","constants","ACCESS_MODE_WRITE","BOLT_PROTOCOL_V1","Logger","logger","TxConfig","txConfig","BoltProtocol","server","chunker","createResponseHandler","log","onProtocolError","_b","disableLosslessIntegers","useBigInt","_server","_chunker","_packer","_createPacker","_unpacker","_createUnpacker","_responseHandler","_log","_onProtocolError","_fatalError","_lastMessageSignature","_config","_this","_transformer","default","values","map","_initialized","_authToken","packer","packable","x","transformer","toStructure","unpacker","unpack","buf","fromStructure","transformMetadata","metadata","initialize","userAgent","boltAgent","authToken","notificationFilter","onError","onComplete","observer","LoginObserver","error","_onLoginError","onCompleted","_onLoginCompleted","assertNotificationFilterIsEmpty","write","init","logoff","flush","LogoffObserver","newError","message","logon","prepareToClose","beginTransaction","database","mode","impersonatedUser","beforeError","afterError","beforeComplete","afterComplete","run","asBeginTransactionParameters","commitTransaction","empty","rollbackTransaction","query","parameters","beforeKeys","afterKeys","_c","_d","highRecordWatermark","Number","MAX_VALUE","_e","lowRecordWatermark","ResultStreamObserver","assertTxConfigIsEmpty","assertDatabaseIsEmpty","assertImpersonatedUserIsEmpty","pullAll","currentFailure","reset","ResetObserver","telemetry","api","CompletedObserver","v1","Packer","Unpacker","queued","queueObserverIfProtocolIsNotBroken","isDebugEnabled","debug","concat","signature","messageStruct","structure","Structure","fields","messageBoundary","isLastMessageLogon","SIGNATURES","HELLO","LOGON","isLastMessageReset","RESET","notifyFatalError","_notifyErrorToObservers","updateCurrentObserver","_updateCurrentObserver","hasOngoingObservableRequests","isBroken","notifyFatalErrorToObserver","_queueObserver","resetFailure","_resetFailure","serverVersion","version"],"sources":["C:/Users/gelgo/Documents/IUT/BUT3/R5.10 - Nouveaux paradigmes de BDD/cluedo-game/node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_util_1 = require(\"./bolt-protocol-util\");\n// eslint-disable-next-line no-unused-vars\nvar channel_1 = require(\"../channel\");\nvar packstream_1 = require(\"../packstream\");\nvar request_message_1 = __importStar(require(\"./request-message\"));\nvar stream_observers_1 = require(\"./stream-observers\");\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar bolt_protocol_v1_transformer_1 = __importDefault(require(\"./bolt-protocol-v1.transformer\"));\nvar transformer_1 = __importDefault(require(\"./transformer\"));\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, _a = neo4j_driver_core_1.internal.constants, ACCESS_MODE_WRITE = _a.ACCESS_MODE_WRITE, BOLT_PROTOCOL_V1 = _a.BOLT_PROTOCOL_V1, Logger = neo4j_driver_core_1.internal.logger.Logger, TxConfig = neo4j_driver_core_1.internal.txConfig.TxConfig;\nvar BoltProtocol = /** @class */ (function () {\n    /**\n     * @callback CreateResponseHandler Creates the response handler\n     * @param {BoltProtocol} protocol The bolt protocol\n     * @returns {ResponseHandler} The response handler\n     */\n    /**\n     * @callback OnProtocolError Handles protocol error\n     * @param {string} error The description\n     */\n    /**\n     * @constructor\n     * @param {Object} server the server informatio.\n     * @param {Chunker} chunker the chunker.\n     * @param {Object} packstreamConfig Packstream configuration\n     * @param {boolean} packstreamConfig.disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\n     * @param {boolean} packstreamConfig.useBigInt if this connection should convert all received integers to native BigInt numbers.\n     * @param {CreateResponseHandler} createResponseHandler Function which creates the response handler\n     * @param {Logger} log the logger\n     * @param {OnProtocolError} onProtocolError handles protocol errors\n     */\n    function BoltProtocol(server, chunker, _a, createResponseHandler, log, onProtocolError) {\n        var _b = _a === void 0 ? {} : _a, disableLosslessIntegers = _b.disableLosslessIntegers, useBigInt = _b.useBigInt;\n        if (createResponseHandler === void 0) { createResponseHandler = function () { return null; }; }\n        this._server = server || {};\n        this._chunker = chunker;\n        this._packer = this._createPacker(chunker);\n        this._unpacker = this._createUnpacker(disableLosslessIntegers, useBigInt);\n        this._responseHandler = createResponseHandler(this);\n        this._log = log;\n        this._onProtocolError = onProtocolError;\n        this._fatalError = null;\n        this._lastMessageSignature = null;\n        this._config = { disableLosslessIntegers: disableLosslessIntegers, useBigInt: useBigInt };\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v1_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        /**\n         * Returns the numerical version identifier for this protocol\n         */\n        get: function () {\n            return BOLT_PROTOCOL_V1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"supportsReAuth\", {\n        /**\n         * @property {boolean} supportsReAuth Either if the protocol version supports re-auth or not.\n         */\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"initialized\", {\n        /**\n         * @property {boolean} initialized Either if the protocol was initialized or not\n         */\n        get: function () {\n            return !!this._initialized;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"authToken\", {\n        /**\n         * @property {object} authToken The token used in the last login\n         */\n        get: function () {\n            return this._authToken;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Get the packer.\n     * @return {Packer} the protocol's packer.\n     */\n    BoltProtocol.prototype.packer = function () {\n        return this._packer;\n    };\n    /**\n     * Creates a packable function out of the provided value\n     * @param x the value to pack\n     * @returns Function\n     */\n    BoltProtocol.prototype.packable = function (x) {\n        return this._packer.packable(x, this.transformer.toStructure);\n    };\n    /**\n     * Get the unpacker.\n     * @return {Unpacker} the protocol's unpacker.\n     */\n    BoltProtocol.prototype.unpacker = function () {\n        return this._unpacker;\n    };\n    /**\n     * Unpack a buffer\n     * @param {Buffer} buf\n     * @returns {any|null} The unpacked value\n     */\n    BoltProtocol.prototype.unpack = function (buf) {\n        return this._unpacker.unpack(buf, this.transformer.fromStructure);\n    };\n    /**\n     * Transform metadata received in SUCCESS message before it is passed to the handler.\n     * @param {Object} metadata the received metadata.\n     * @return {Object} transformed metadata.\n     */\n    BoltProtocol.prototype.transformMetadata = function (metadata) {\n        return metadata;\n    };\n    /**\n     * Perform initialization and authentication of the underlying connection.\n     * @param {Object} param\n     * @param {string} param.userAgent the user agent.\n     * @param {Object} param.authToken the authentication token.\n     * @param {NotificationFilter} param.notificationFilter the notification filter.\n     * @param {function(err: Error)} param.onError the callback to invoke on error.\n     * @param {function()} param.onComplete the callback to invoke on completion.\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.initialize = function (_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\n        var observer = new stream_observers_1.LoginObserver({\n            onError: function (error) { return _this._onLoginError(error, onError); },\n            onCompleted: function (metadata) { return _this._onLoginCompleted(metadata, onComplete); }\n        });\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.init(userAgent, authToken), observer, true);\n        return observer;\n    };\n    /**\n     * Performs logoff of the underlying connection\n     *\n     * @param {Object} param\n     * @param {function(err: Error)} param.onError the callback to invoke on error.\n     * @param {function()} param.onComplete the callback to invoke on completion.\n     * @param {boolean} param.flush whether to flush the buffered messages.\n     *\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.logoff = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onComplete = _b.onComplete, onError = _b.onError, flush = _b.flush;\n        var observer = new stream_observers_1.LogoffObserver({\n            onCompleted: onComplete,\n            onError: onError\n        });\n        // TODO: Verify the Neo4j version in the message\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support logoff. ' +\n            'Please upgrade to Neo4j 5.5.0 or later in order to use this functionality.');\n        // unsupported API was used, consider this a fatal error for the current connection\n        this._onProtocolError(error.message);\n        observer.onError(error);\n        throw error;\n    };\n    /**\n     * Performs login of the underlying connection\n     *\n     * @param {Object} args\n     * @param {Object} args.authToken the authentication token.\n     * @param {function(err: Error)} args.onError the callback to invoke on error.\n     * @param {function()} args.onComplete the callback to invoke on completion.\n     * @param {boolean} args.flush whether to flush the buffered messages.\n     *\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.logon = function (_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, authToken = _b.authToken, onComplete = _b.onComplete, onError = _b.onError, flush = _b.flush;\n        var observer = new stream_observers_1.LoginObserver({\n            onCompleted: function () { return _this._onLoginCompleted({}, authToken, onComplete); },\n            onError: function (error) { return _this._onLoginError(error, onError); }\n        });\n        // TODO: Verify the Neo4j version in the message\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support logon. ' +\n            'Please upgrade to Neo4j 5.5.0 or later in order to use this functionality.');\n        // unsupported API was used, consider this a fatal error for the current connection\n        this._onProtocolError(error.message);\n        observer.onError(error);\n        throw error;\n    };\n    /**\n     * Perform protocol related operations for closing this connection\n     */\n    BoltProtocol.prototype.prepareToClose = function () {\n        // no need to notify the database in this protocol version\n    };\n    /**\n     * Begin an explicit transaction.\n     * @param {Object} param\n     * @param {Bookmarks} param.bookmarks the bookmarks.\n     * @param {TxConfig} param.txConfig the configuration.\n     * @param {string} param.database the target database name.\n     * @param {string} param.mode the access mode.\n     * @param {string} param.impersonatedUser the impersonated user\n     * @param {NotificationFilter} param.notificationFilter the notification filter.\n     * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\n     * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\n     * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\n     * @param {function()} param.afterComplete the callback to invoke after handling the completion.\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.beginTransaction = function (_a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\n        return this.run('BEGIN', bookmarks ? bookmarks.asBeginTransactionParameters() : {}, {\n            bookmarks: bookmarks,\n            txConfig: txConfig,\n            database: database,\n            mode: mode,\n            impersonatedUser: impersonatedUser,\n            notificationFilter: notificationFilter,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete,\n            flush: false\n        });\n    };\n    /**\n     * Commit the explicit transaction.\n     * @param {Object} param\n     * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\n     * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\n     * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\n     * @param {function()} param.afterComplete the callback to invoke after handling the completion.\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.commitTransaction = function (_a) {\n        var _b = _a === void 0 ? {} : _a, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\n        // WRITE access mode is used as a place holder here, it has\n        // no effect on behaviour for Bolt V1 & V2\n        return this.run('COMMIT', {}, {\n            bookmarks: Bookmarks.empty(),\n            txConfig: TxConfig.empty(),\n            mode: ACCESS_MODE_WRITE,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete\n        });\n    };\n    /**\n     * Rollback the explicit transaction.\n     * @param {Object} param\n     * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\n     * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\n     * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\n     * @param {function()} param.afterComplete the callback to invoke after handling the completion.\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.rollbackTransaction = function (_a) {\n        var _b = _a === void 0 ? {} : _a, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\n        // WRITE access mode is used as a place holder here, it has\n        // no effect on behaviour for Bolt V1 & V2\n        return this.run('ROLLBACK', {}, {\n            bookmarks: Bookmarks.empty(),\n            txConfig: TxConfig.empty(),\n            mode: ACCESS_MODE_WRITE,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete\n        });\n    };\n    /**\n     * Send a Cypher query through the underlying connection.\n     * @param {string} query the cypher query.\n     * @param {Object} parameters the query parameters.\n     * @param {Object} param\n     * @param {Bookmarks} param.bookmarks the bookmarks.\n     * @param {TxConfig} param.txConfig the transaction configuration.\n     * @param {string} param.database the target database name.\n     * @param {string} param.impersonatedUser the impersonated user\n     * @param {NotificationFilter} param.notificationFilter the notification filter.\n     * @param {string} param.mode the access mode.\n     * @param {function(keys: string[])} param.beforeKeys the callback to invoke before handling the keys.\n     * @param {function(keys: string[])} param.afterKeys the callback to invoke after handling the keys.\n     * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\n     * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\n     * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\n     * @param {function()} param.afterComplete the callback to invoke after handling the completion.\n     * @param {boolean} param.flush whether to flush the buffered messages.\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.run = function (query, parameters, _a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, _c = _b.flush, flush = _c === void 0 ? true : _c, _d = _b.highRecordWatermark, highRecordWatermark = _d === void 0 ? Number.MAX_VALUE : _d, _e = _b.lowRecordWatermark, lowRecordWatermark = _e === void 0 ? Number.MAX_VALUE : _e;\n        var observer = new stream_observers_1.ResultStreamObserver({\n            server: this._server,\n            beforeKeys: beforeKeys,\n            afterKeys: afterKeys,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete,\n            highRecordWatermark: highRecordWatermark,\n            lowRecordWatermark: lowRecordWatermark\n        });\n        // bookmarks and mode are ignored in this version of the protocol\n        (0, bolt_protocol_util_1.assertTxConfigIsEmpty)(txConfig, this._onProtocolError, observer);\n        // passing in a database name on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertDatabaseIsEmpty)(database, this._onProtocolError, observer);\n        // passing impersonated user on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertImpersonatedUserIsEmpty)(impersonatedUser, this._onProtocolError, observer);\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.run(query, parameters), observer, false);\n        this.write(request_message_1.default.pullAll(), observer, flush);\n        return observer;\n    };\n    Object.defineProperty(BoltProtocol.prototype, \"currentFailure\", {\n        get: function () {\n            return this._responseHandler.currentFailure;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Send a RESET through the underlying connection.\n     * @param {Object} param\n     * @param {function(err: Error)} param.onError the callback to invoke on error.\n     * @param {function()} param.onComplete the callback to invoke on completion.\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.reset = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onComplete = _b.onComplete;\n        var observer = new stream_observers_1.ResetObserver({\n            onProtocolError: this._onProtocolError,\n            onError: onError,\n            onComplete: onComplete\n        });\n        this.write(request_message_1.default.reset(), observer, true);\n        return observer;\n    };\n    /**\n     * Send a TELEMETRY through the underlying connection.\n     *\n     * @param {object} param0 Message params\n     * @param {number} param0.api The API called\n     * @param {object} param1 Configuration and callbacks\n     * @param {function()} param1.onCompleted Called when completed\n     * @param {function()} param1.onError Called when error\n     * @return {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.telemetry = function (_a, _b) {\n        var api = _a.api;\n        var _c = _b === void 0 ? {} : _b, onError = _c.onError, onCompleted = _c.onCompleted;\n        var observer = new stream_observers_1.CompletedObserver();\n        if (onCompleted) {\n            onCompleted();\n        }\n        return observer;\n    };\n    BoltProtocol.prototype._createPacker = function (chunker) {\n        return new packstream_1.v1.Packer(chunker);\n    };\n    BoltProtocol.prototype._createUnpacker = function (disableLosslessIntegers, useBigInt) {\n        return new packstream_1.v1.Unpacker(disableLosslessIntegers, useBigInt);\n    };\n    /**\n     * Write a message to the network channel.\n     * @param {RequestMessage} message the message to write.\n     * @param {StreamObserver} observer the response observer.\n     * @param {boolean} flush `true` if flush should happen after the message is written to the buffer.\n     */\n    BoltProtocol.prototype.write = function (message, observer, flush) {\n        var queued = this.queueObserverIfProtocolIsNotBroken(observer);\n        if (queued) {\n            if (this._log.isDebugEnabled()) {\n                this._log.debug(\"C: \".concat(message));\n            }\n            this._lastMessageSignature = message.signature;\n            var messageStruct = new packstream_1.structure.Structure(message.signature, message.fields);\n            this.packable(messageStruct)();\n            this._chunker.messageBoundary();\n            if (flush) {\n                this._chunker.flush();\n            }\n        }\n    };\n    BoltProtocol.prototype.isLastMessageLogon = function () {\n        return this._lastMessageSignature === request_message_1.SIGNATURES.HELLO ||\n            this._lastMessageSignature === request_message_1.SIGNATURES.LOGON;\n    };\n    BoltProtocol.prototype.isLastMessageReset = function () {\n        return this._lastMessageSignature === request_message_1.SIGNATURES.RESET;\n    };\n    /**\n     * Notifies faltal erros to the observers and mark the protocol in the fatal error state.\n     * @param {Error} error The error\n     */\n    BoltProtocol.prototype.notifyFatalError = function (error) {\n        this._fatalError = error;\n        return this._responseHandler._notifyErrorToObservers(error);\n    };\n    /**\n     * Updates the the current observer with the next one on the queue.\n     */\n    BoltProtocol.prototype.updateCurrentObserver = function () {\n        return this._responseHandler._updateCurrentObserver();\n    };\n    /**\n     * Checks if exist an ongoing observable requests\n     * @return {boolean}\n     */\n    BoltProtocol.prototype.hasOngoingObservableRequests = function () {\n        return this._responseHandler.hasOngoingObservableRequests();\n    };\n    /**\n     * Enqueue the observer if the protocol is not broken.\n     * In case it's broken, the observer will be notified about the error.\n     *\n     * @param {StreamObserver} observer The observer\n     * @returns {boolean} if it was queued\n     */\n    BoltProtocol.prototype.queueObserverIfProtocolIsNotBroken = function (observer) {\n        if (this.isBroken()) {\n            this.notifyFatalErrorToObserver(observer);\n            return false;\n        }\n        return this._responseHandler._queueObserver(observer);\n    };\n    /**\n     * Veritfy the protocol is not broken.\n     * @returns {boolean}\n     */\n    BoltProtocol.prototype.isBroken = function () {\n        return !!this._fatalError;\n    };\n    /**\n     * Notifies the current fatal error to the observer\n     *\n     * @param {StreamObserver} observer The observer\n     */\n    BoltProtocol.prototype.notifyFatalErrorToObserver = function (observer) {\n        if (observer && observer.onError) {\n            observer.onError(this._fatalError);\n        }\n    };\n    /**\n     * Reset current failure on the observable response handler to null.\n     */\n    BoltProtocol.prototype.resetFailure = function () {\n        this._responseHandler._resetFailure();\n    };\n    BoltProtocol.prototype._onLoginCompleted = function (metadata, authToken, onCompleted) {\n        this._initialized = true;\n        this._authToken = authToken;\n        if (metadata) {\n            var serverVersion = metadata.server;\n            if (!this._server.version) {\n                this._server.version = serverVersion;\n            }\n        }\n        if (onCompleted) {\n            onCompleted(metadata);\n        }\n    };\n    BoltProtocol.prototype._onLoginError = function (error, onError) {\n        this._onProtocolError(error.message);\n        if (onError) {\n            onError(error);\n        }\n    };\n    return BoltProtocol;\n}());\nexports.default = BoltProtocol;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,KAAMC,MAAM,CAACC,MAAM,GAAI,UAASC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EAC5F,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5B,IAAIG,IAAI,GAAGP,MAAM,CAACQ,wBAAwB,CAACL,CAAC,EAAEC,CAAC,CAAC;EAChD,IAAI,CAACG,IAAI,KAAK,KAAK,IAAIA,IAAI,GAAG,CAACJ,CAAC,CAACM,UAAU,GAAGF,IAAI,CAACG,QAAQ,IAAIH,IAAI,CAACI,YAAY,CAAC,EAAE;IACjFJ,IAAI,GAAG;MAAEK,UAAU,EAAE,IAAI;MAAEC,GAAG,EAAE,SAAAA,CAAA,EAAW;QAAE,OAAOV,CAAC,CAACC,CAAC,CAAC;MAAE;IAAE,CAAC;EAC/D;EACAJ,MAAM,CAACc,cAAc,CAACZ,CAAC,EAAEG,EAAE,EAAEE,IAAI,CAAC;AACtC,CAAC,GAAK,UAASL,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EACxB,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5BF,CAAC,CAACG,EAAE,CAAC,GAAGF,CAAC,CAACC,CAAC,CAAC;AAChB,CAAE,CAAC;AACH,IAAIW,kBAAkB,GAAI,IAAI,IAAI,IAAI,CAACA,kBAAkB,KAAMf,MAAM,CAACC,MAAM,GAAI,UAASC,CAAC,EAAEc,CAAC,EAAE;EAC3FhB,MAAM,CAACc,cAAc,CAACZ,CAAC,EAAE,SAAS,EAAE;IAAEU,UAAU,EAAE,IAAI;IAAEK,KAAK,EAAED;EAAE,CAAC,CAAC;AACvE,CAAC,GAAI,UAASd,CAAC,EAAEc,CAAC,EAAE;EAChBd,CAAC,CAAC,SAAS,CAAC,GAAGc,CAAC;AACpB,CAAC,CAAC;AACF,IAAIE,YAAY,GAAI,IAAI,IAAI,IAAI,CAACA,YAAY,IAAK,UAAUC,GAAG,EAAE;EAC7D,IAAIA,GAAG,IAAIA,GAAG,CAACV,UAAU,EAAE,OAAOU,GAAG;EACrC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAID,GAAG,IAAI,IAAI,EAAE,KAAK,IAAIf,CAAC,IAAIe,GAAG,EAAE,IAAIf,CAAC,KAAK,SAAS,IAAIJ,MAAM,CAACqB,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,GAAG,EAAEf,CAAC,CAAC,EAAEL,eAAe,CAACqB,MAAM,EAAED,GAAG,EAAEf,CAAC,CAAC;EACxIW,kBAAkB,CAACK,MAAM,EAAED,GAAG,CAAC;EAC/B,OAAOC,MAAM;AACjB,CAAC;AACD,IAAII,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUL,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACV,UAAU,GAAIU,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDnB,MAAM,CAACc,cAAc,CAACW,OAAO,EAAE,YAAY,EAAE;EAAER,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIS,oBAAoB,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC1D;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAY,CAAC;AACrC,IAAIE,YAAY,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIG,iBAAiB,GAAGZ,YAAY,CAACS,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAClE,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;AACtD,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,mBAAmB,CAAC;AACtD,IAAIM,8BAA8B,GAAGT,eAAe,CAACG,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAC/F,IAAIO,aAAa,GAAGV,eAAe,CAACG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC7D,IAAIQ,SAAS,GAAGH,mBAAmB,CAACI,QAAQ,CAACC,SAAS,CAACF,SAAS;EAAEG,EAAE,GAAGN,mBAAmB,CAACI,QAAQ,CAACG,SAAS;EAAEC,iBAAiB,GAAGF,EAAE,CAACE,iBAAiB;EAAEC,gBAAgB,GAAGH,EAAE,CAACG,gBAAgB;EAAEC,MAAM,GAAGV,mBAAmB,CAACI,QAAQ,CAACO,MAAM,CAACD,MAAM;EAAEE,QAAQ,GAAGZ,mBAAmB,CAACI,QAAQ,CAACS,QAAQ,CAACD,QAAQ;AAC/S,IAAIE,YAAY,GAAG,aAAe,YAAY;EAC1C;AACJ;AACA;AACA;AACA;EACI;AACJ;AACA;AACA;EACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,YAAYA,CAACC,MAAM,EAAEC,OAAO,EAAEV,EAAE,EAAEW,qBAAqB,EAAEC,GAAG,EAAEC,eAAe,EAAE;IACpF,IAAIC,EAAE,GAAGd,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MAAEe,uBAAuB,GAAGD,EAAE,CAACC,uBAAuB;MAAEC,SAAS,GAAGF,EAAE,CAACE,SAAS;IAChH,IAAIL,qBAAqB,KAAK,KAAK,CAAC,EAAE;MAAEA,qBAAqB,GAAG,SAAAA,CAAA,EAAY;QAAE,OAAO,IAAI;MAAE,CAAC;IAAE;IAC9F,IAAI,CAACM,OAAO,GAAGR,MAAM,IAAI,CAAC,CAAC;IAC3B,IAAI,CAACS,QAAQ,GAAGR,OAAO;IACvB,IAAI,CAACS,OAAO,GAAG,IAAI,CAACC,aAAa,CAACV,OAAO,CAAC;IAC1C,IAAI,CAACW,SAAS,GAAG,IAAI,CAACC,eAAe,CAACP,uBAAuB,EAAEC,SAAS,CAAC;IACzE,IAAI,CAACO,gBAAgB,GAAGZ,qBAAqB,CAAC,IAAI,CAAC;IACnD,IAAI,CAACa,IAAI,GAAGZ,GAAG;IACf,IAAI,CAACa,gBAAgB,GAAGZ,eAAe;IACvC,IAAI,CAACa,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,qBAAqB,GAAG,IAAI;IACjC,IAAI,CAACC,OAAO,GAAG;MAAEb,uBAAuB,EAAEA,uBAAuB;MAAEC,SAAS,EAAEA;IAAU,CAAC;EAC7F;EACAtD,MAAM,CAACc,cAAc,CAACgC,YAAY,CAACzB,SAAS,EAAE,aAAa,EAAE;IACzDR,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,IAAIsD,KAAK,GAAG,IAAI;MAChB,IAAI,IAAI,CAACC,YAAY,KAAK9D,SAAS,EAAE;QACjC,IAAI,CAAC8D,YAAY,GAAG,IAAIlC,aAAa,CAACmC,OAAO,CAACrE,MAAM,CAACsE,MAAM,CAACrC,8BAA8B,CAACoC,OAAO,CAAC,CAACE,GAAG,CAAC,UAAUtE,MAAM,EAAE;UAAE,OAAOA,MAAM,CAACkE,KAAK,CAACD,OAAO,EAAEC,KAAK,CAACL,IAAI,CAAC;QAAE,CAAC,CAAC,CAAC;MAC7K;MACA,OAAO,IAAI,CAACM,YAAY;IAC5B,CAAC;IACDxD,UAAU,EAAE,KAAK;IACjBD,YAAY,EAAE;EAClB,CAAC,CAAC;EACFX,MAAM,CAACc,cAAc,CAACgC,YAAY,CAACzB,SAAS,EAAE,SAAS,EAAE;IACrD;AACR;AACA;IACQR,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO4B,gBAAgB;IAC3B,CAAC;IACD7B,UAAU,EAAE,KAAK;IACjBD,YAAY,EAAE;EAClB,CAAC,CAAC;EACFX,MAAM,CAACc,cAAc,CAACgC,YAAY,CAACzB,SAAS,EAAE,gBAAgB,EAAE;IAC5D;AACR;AACA;IACQR,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,KAAK;IAChB,CAAC;IACDD,UAAU,EAAE,KAAK;IACjBD,YAAY,EAAE;EAClB,CAAC,CAAC;EACFX,MAAM,CAACc,cAAc,CAACgC,YAAY,CAACzB,SAAS,EAAE,aAAa,EAAE;IACzD;AACR;AACA;IACQR,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,CAAC,CAAC,IAAI,CAAC2D,YAAY;IAC9B,CAAC;IACD5D,UAAU,EAAE,KAAK;IACjBD,YAAY,EAAE;EAClB,CAAC,CAAC;EACFX,MAAM,CAACc,cAAc,CAACgC,YAAY,CAACzB,SAAS,EAAE,WAAW,EAAE;IACvD;AACR;AACA;IACQR,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAAC4D,UAAU;IAC1B,CAAC;IACD7D,UAAU,EAAE,KAAK;IACjBD,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;AACA;EACImC,YAAY,CAACzB,SAAS,CAACqD,MAAM,GAAG,YAAY;IACxC,OAAO,IAAI,CAACjB,OAAO;EACvB,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIX,YAAY,CAACzB,SAAS,CAACsD,QAAQ,GAAG,UAAUC,CAAC,EAAE;IAC3C,OAAO,IAAI,CAACnB,OAAO,CAACkB,QAAQ,CAACC,CAAC,EAAE,IAAI,CAACC,WAAW,CAACC,WAAW,CAAC;EACjE,CAAC;EACD;AACJ;AACA;AACA;EACIhC,YAAY,CAACzB,SAAS,CAAC0D,QAAQ,GAAG,YAAY;IAC1C,OAAO,IAAI,CAACpB,SAAS;EACzB,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIb,YAAY,CAACzB,SAAS,CAAC2D,MAAM,GAAG,UAAUC,GAAG,EAAE;IAC3C,OAAO,IAAI,CAACtB,SAAS,CAACqB,MAAM,CAACC,GAAG,EAAE,IAAI,CAACJ,WAAW,CAACK,aAAa,CAAC;EACrE,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIpC,YAAY,CAACzB,SAAS,CAAC8D,iBAAiB,GAAG,UAAUC,QAAQ,EAAE;IAC3D,OAAOA,QAAQ;EACnB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACItC,YAAY,CAACzB,SAAS,CAACgE,UAAU,GAAG,UAAU/C,EAAE,EAAE;IAC9C,IAAI6B,KAAK,GAAG,IAAI;IAChB,IAAIf,EAAE,GAAGd,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MAAEgD,SAAS,GAAGlC,EAAE,CAACkC,SAAS;MAAEC,SAAS,GAAGnC,EAAE,CAACmC,SAAS;MAAEC,SAAS,GAAGpC,EAAE,CAACoC,SAAS;MAAEC,kBAAkB,GAAGrC,EAAE,CAACqC,kBAAkB;MAAEC,OAAO,GAAGtC,EAAE,CAACsC,OAAO;MAAEC,UAAU,GAAGvC,EAAE,CAACuC,UAAU;IAC5M,IAAIC,QAAQ,GAAG,IAAI7D,kBAAkB,CAAC8D,aAAa,CAAC;MAChDH,OAAO,EAAE,SAAAA,CAAUI,KAAK,EAAE;QAAE,OAAO3B,KAAK,CAAC4B,aAAa,CAACD,KAAK,EAAEJ,OAAO,CAAC;MAAE,CAAC;MACzEM,WAAW,EAAE,SAAAA,CAAUZ,QAAQ,EAAE;QAAE,OAAOjB,KAAK,CAAC8B,iBAAiB,CAACb,QAAQ,EAAEO,UAAU,CAAC;MAAE;IAC7F,CAAC,CAAC;IACF;IACA,CAAC,CAAC,EAAEjE,oBAAoB,CAACwE,+BAA+B,EAAET,kBAAkB,EAAE,IAAI,CAAC1B,gBAAgB,EAAE6B,QAAQ,CAAC;IAC9G,IAAI,CAACO,KAAK,CAACrE,iBAAiB,CAACuC,OAAO,CAAC+B,IAAI,CAACd,SAAS,EAAEE,SAAS,CAAC,EAAEI,QAAQ,EAAE,IAAI,CAAC;IAChF,OAAOA,QAAQ;EACnB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI9C,YAAY,CAACzB,SAAS,CAACgF,MAAM,GAAG,UAAU/D,EAAE,EAAE;IAC1C,IAAIc,EAAE,GAAGd,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MAAEqD,UAAU,GAAGvC,EAAE,CAACuC,UAAU;MAAED,OAAO,GAAGtC,EAAE,CAACsC,OAAO;MAAEY,KAAK,GAAGlD,EAAE,CAACkD,KAAK;IACpG,IAAIV,QAAQ,GAAG,IAAI7D,kBAAkB,CAACwE,cAAc,CAAC;MACjDP,WAAW,EAAEL,UAAU;MACvBD,OAAO,EAAEA;IACb,CAAC,CAAC;IACF;IACA,IAAII,KAAK,GAAG,CAAC,CAAC,EAAE9D,mBAAmB,CAACwE,QAAQ,EAAE,kEAAkE,GAC5G,4EAA4E,CAAC;IACjF;IACA,IAAI,CAACzC,gBAAgB,CAAC+B,KAAK,CAACW,OAAO,CAAC;IACpCb,QAAQ,CAACF,OAAO,CAACI,KAAK,CAAC;IACvB,MAAMA,KAAK;EACf,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIhD,YAAY,CAACzB,SAAS,CAACqF,KAAK,GAAG,UAAUpE,EAAE,EAAE;IACzC,IAAI6B,KAAK,GAAG,IAAI;IAChB,IAAIf,EAAE,GAAGd,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MAAEkD,SAAS,GAAGpC,EAAE,CAACoC,SAAS;MAAEG,UAAU,GAAGvC,EAAE,CAACuC,UAAU;MAAED,OAAO,GAAGtC,EAAE,CAACsC,OAAO;MAAEY,KAAK,GAAGlD,EAAE,CAACkD,KAAK;IAC9H,IAAIV,QAAQ,GAAG,IAAI7D,kBAAkB,CAAC8D,aAAa,CAAC;MAChDG,WAAW,EAAE,SAAAA,CAAA,EAAY;QAAE,OAAO7B,KAAK,CAAC8B,iBAAiB,CAAC,CAAC,CAAC,EAAET,SAAS,EAAEG,UAAU,CAAC;MAAE,CAAC;MACvFD,OAAO,EAAE,SAAAA,CAAUI,KAAK,EAAE;QAAE,OAAO3B,KAAK,CAAC4B,aAAa,CAACD,KAAK,EAAEJ,OAAO,CAAC;MAAE;IAC5E,CAAC,CAAC;IACF;IACA,IAAII,KAAK,GAAG,CAAC,CAAC,EAAE9D,mBAAmB,CAACwE,QAAQ,EAAE,iEAAiE,GAC3G,4EAA4E,CAAC;IACjF;IACA,IAAI,CAACzC,gBAAgB,CAAC+B,KAAK,CAACW,OAAO,CAAC;IACpCb,QAAQ,CAACF,OAAO,CAACI,KAAK,CAAC;IACvB,MAAMA,KAAK;EACf,CAAC;EACD;AACJ;AACA;EACIhD,YAAY,CAACzB,SAAS,CAACsF,cAAc,GAAG,YAAY;IAChD;EAAA,CACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI7D,YAAY,CAACzB,SAAS,CAACuF,gBAAgB,GAAG,UAAUtE,EAAE,EAAE;IACpD,IAAIc,EAAE,GAAGd,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MAAED,SAAS,GAAGe,EAAE,CAACf,SAAS;MAAEQ,QAAQ,GAAGO,EAAE,CAACP,QAAQ;MAAEgE,QAAQ,GAAGzD,EAAE,CAACyD,QAAQ;MAAEC,IAAI,GAAG1D,EAAE,CAAC0D,IAAI;MAAEC,gBAAgB,GAAG3D,EAAE,CAAC2D,gBAAgB;MAAEtB,kBAAkB,GAAGrC,EAAE,CAACqC,kBAAkB;MAAEuB,WAAW,GAAG5D,EAAE,CAAC4D,WAAW;MAAEC,UAAU,GAAG7D,EAAE,CAAC6D,UAAU;MAAEC,cAAc,GAAG9D,EAAE,CAAC8D,cAAc;MAAEC,aAAa,GAAG/D,EAAE,CAAC+D,aAAa;IAC9U,OAAO,IAAI,CAACC,GAAG,CAAC,OAAO,EAAE/E,SAAS,GAAGA,SAAS,CAACgF,4BAA4B,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;MAChFhF,SAAS,EAAEA,SAAS;MACpBQ,QAAQ,EAAEA,QAAQ;MAClBgE,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAAEA,IAAI;MACVC,gBAAgB,EAAEA,gBAAgB;MAClCtB,kBAAkB,EAAEA,kBAAkB;MACtCuB,WAAW,EAAEA,WAAW;MACxBC,UAAU,EAAEA,UAAU;MACtBC,cAAc,EAAEA,cAAc;MAC9BC,aAAa,EAAEA,aAAa;MAC5Bb,KAAK,EAAE;IACX,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIxD,YAAY,CAACzB,SAAS,CAACiG,iBAAiB,GAAG,UAAUhF,EAAE,EAAE;IACrD,IAAIc,EAAE,GAAGd,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MAAE0E,WAAW,GAAG5D,EAAE,CAAC4D,WAAW;MAAEC,UAAU,GAAG7D,EAAE,CAAC6D,UAAU;MAAEC,cAAc,GAAG9D,EAAE,CAAC8D,cAAc;MAAEC,aAAa,GAAG/D,EAAE,CAAC+D,aAAa;IAChK;IACA;IACA,OAAO,IAAI,CAACC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;MAC1B/E,SAAS,EAAEF,SAAS,CAACoF,KAAK,CAAC,CAAC;MAC5B1E,QAAQ,EAAED,QAAQ,CAAC2E,KAAK,CAAC,CAAC;MAC1BT,IAAI,EAAEtE,iBAAiB;MACvBwE,WAAW,EAAEA,WAAW;MACxBC,UAAU,EAAEA,UAAU;MACtBC,cAAc,EAAEA,cAAc;MAC9BC,aAAa,EAAEA;IACnB,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIrE,YAAY,CAACzB,SAAS,CAACmG,mBAAmB,GAAG,UAAUlF,EAAE,EAAE;IACvD,IAAIc,EAAE,GAAGd,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MAAE0E,WAAW,GAAG5D,EAAE,CAAC4D,WAAW;MAAEC,UAAU,GAAG7D,EAAE,CAAC6D,UAAU;MAAEC,cAAc,GAAG9D,EAAE,CAAC8D,cAAc;MAAEC,aAAa,GAAG/D,EAAE,CAAC+D,aAAa;IAChK;IACA;IACA,OAAO,IAAI,CAACC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE;MAC5B/E,SAAS,EAAEF,SAAS,CAACoF,KAAK,CAAC,CAAC;MAC5B1E,QAAQ,EAAED,QAAQ,CAAC2E,KAAK,CAAC,CAAC;MAC1BT,IAAI,EAAEtE,iBAAiB;MACvBwE,WAAW,EAAEA,WAAW;MACxBC,UAAU,EAAEA,UAAU;MACtBC,cAAc,EAAEA,cAAc;MAC9BC,aAAa,EAAEA;IACnB,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIrE,YAAY,CAACzB,SAAS,CAAC+F,GAAG,GAAG,UAAUK,KAAK,EAAEC,UAAU,EAAEpF,EAAE,EAAE;IAC1D,IAAIc,EAAE,GAAGd,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MAAED,SAAS,GAAGe,EAAE,CAACf,SAAS;MAAEQ,QAAQ,GAAGO,EAAE,CAACP,QAAQ;MAAEgE,QAAQ,GAAGzD,EAAE,CAACyD,QAAQ;MAAEC,IAAI,GAAG1D,EAAE,CAAC0D,IAAI;MAAEC,gBAAgB,GAAG3D,EAAE,CAAC2D,gBAAgB;MAAEtB,kBAAkB,GAAGrC,EAAE,CAACqC,kBAAkB;MAAEkC,UAAU,GAAGvE,EAAE,CAACuE,UAAU;MAAEC,SAAS,GAAGxE,EAAE,CAACwE,SAAS;MAAEZ,WAAW,GAAG5D,EAAE,CAAC4D,WAAW;MAAEC,UAAU,GAAG7D,EAAE,CAAC6D,UAAU;MAAEC,cAAc,GAAG9D,EAAE,CAAC8D,cAAc;MAAEC,aAAa,GAAG/D,EAAE,CAAC+D,aAAa;MAAEU,EAAE,GAAGzE,EAAE,CAACkD,KAAK;MAAEA,KAAK,GAAGuB,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,EAAE;MAAEC,EAAE,GAAG1E,EAAE,CAAC2E,mBAAmB;MAAEA,mBAAmB,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAGE,MAAM,CAACC,SAAS,GAAGH,EAAE;MAAEI,EAAE,GAAG9E,EAAE,CAAC+E,kBAAkB;MAAEA,kBAAkB,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAGF,MAAM,CAACC,SAAS,GAAGC,EAAE;IACxmB,IAAItC,QAAQ,GAAG,IAAI7D,kBAAkB,CAACqG,oBAAoB,CAAC;MACvDrF,MAAM,EAAE,IAAI,CAACQ,OAAO;MACpBoE,UAAU,EAAEA,UAAU;MACtBC,SAAS,EAAEA,SAAS;MACpBZ,WAAW,EAAEA,WAAW;MACxBC,UAAU,EAAEA,UAAU;MACtBC,cAAc,EAAEA,cAAc;MAC9BC,aAAa,EAAEA,aAAa;MAC5BY,mBAAmB,EAAEA,mBAAmB;MACxCI,kBAAkB,EAAEA;IACxB,CAAC,CAAC;IACF;IACA,CAAC,CAAC,EAAEzG,oBAAoB,CAAC2G,qBAAqB,EAAExF,QAAQ,EAAE,IAAI,CAACkB,gBAAgB,EAAE6B,QAAQ,CAAC;IAC1F;IACA,CAAC,CAAC,EAAElE,oBAAoB,CAAC4G,qBAAqB,EAAEzB,QAAQ,EAAE,IAAI,CAAC9C,gBAAgB,EAAE6B,QAAQ,CAAC;IAC1F;IACA,CAAC,CAAC,EAAElE,oBAAoB,CAAC6G,6BAA6B,EAAExB,gBAAgB,EAAE,IAAI,CAAChD,gBAAgB,EAAE6B,QAAQ,CAAC;IAC1G;IACA,CAAC,CAAC,EAAElE,oBAAoB,CAACwE,+BAA+B,EAAET,kBAAkB,EAAE,IAAI,CAAC1B,gBAAgB,EAAE6B,QAAQ,CAAC;IAC9G,IAAI,CAACO,KAAK,CAACrE,iBAAiB,CAACuC,OAAO,CAAC+C,GAAG,CAACK,KAAK,EAAEC,UAAU,CAAC,EAAE9B,QAAQ,EAAE,KAAK,CAAC;IAC7E,IAAI,CAACO,KAAK,CAACrE,iBAAiB,CAACuC,OAAO,CAACmE,OAAO,CAAC,CAAC,EAAE5C,QAAQ,EAAEU,KAAK,CAAC;IAChE,OAAOV,QAAQ;EACnB,CAAC;EACD5F,MAAM,CAACc,cAAc,CAACgC,YAAY,CAACzB,SAAS,EAAE,gBAAgB,EAAE;IAC5DR,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACgD,gBAAgB,CAAC4E,cAAc;IAC/C,CAAC;IACD7H,UAAU,EAAE,KAAK;IACjBD,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;AACA;AACA;AACA;AACA;EACImC,YAAY,CAACzB,SAAS,CAACqH,KAAK,GAAG,UAAUpG,EAAE,EAAE;IACzC,IAAIc,EAAE,GAAGd,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MAAEoD,OAAO,GAAGtC,EAAE,CAACsC,OAAO;MAAEC,UAAU,GAAGvC,EAAE,CAACuC,UAAU;IAClF,IAAIC,QAAQ,GAAG,IAAI7D,kBAAkB,CAAC4G,aAAa,CAAC;MAChDxF,eAAe,EAAE,IAAI,CAACY,gBAAgB;MACtC2B,OAAO,EAAEA,OAAO;MAChBC,UAAU,EAAEA;IAChB,CAAC,CAAC;IACF,IAAI,CAACQ,KAAK,CAACrE,iBAAiB,CAACuC,OAAO,CAACqE,KAAK,CAAC,CAAC,EAAE9C,QAAQ,EAAE,IAAI,CAAC;IAC7D,OAAOA,QAAQ;EACnB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI9C,YAAY,CAACzB,SAAS,CAACuH,SAAS,GAAG,UAAUtG,EAAE,EAAEc,EAAE,EAAE;IACjD,IAAIyF,GAAG,GAAGvG,EAAE,CAACuG,GAAG;IAChB,IAAIhB,EAAE,GAAGzE,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE;MAAEsC,OAAO,GAAGmC,EAAE,CAACnC,OAAO;MAAEM,WAAW,GAAG6B,EAAE,CAAC7B,WAAW;IACpF,IAAIJ,QAAQ,GAAG,IAAI7D,kBAAkB,CAAC+G,iBAAiB,CAAC,CAAC;IACzD,IAAI9C,WAAW,EAAE;MACbA,WAAW,CAAC,CAAC;IACjB;IACA,OAAOJ,QAAQ;EACnB,CAAC;EACD9C,YAAY,CAACzB,SAAS,CAACqC,aAAa,GAAG,UAAUV,OAAO,EAAE;IACtD,OAAO,IAAInB,YAAY,CAACkH,EAAE,CAACC,MAAM,CAAChG,OAAO,CAAC;EAC9C,CAAC;EACDF,YAAY,CAACzB,SAAS,CAACuC,eAAe,GAAG,UAAUP,uBAAuB,EAAEC,SAAS,EAAE;IACnF,OAAO,IAAIzB,YAAY,CAACkH,EAAE,CAACE,QAAQ,CAAC5F,uBAAuB,EAAEC,SAAS,CAAC;EAC3E,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIR,YAAY,CAACzB,SAAS,CAAC8E,KAAK,GAAG,UAAUM,OAAO,EAAEb,QAAQ,EAAEU,KAAK,EAAE;IAC/D,IAAI4C,MAAM,GAAG,IAAI,CAACC,kCAAkC,CAACvD,QAAQ,CAAC;IAC9D,IAAIsD,MAAM,EAAE;MACR,IAAI,IAAI,CAACpF,IAAI,CAACsF,cAAc,CAAC,CAAC,EAAE;QAC5B,IAAI,CAACtF,IAAI,CAACuF,KAAK,CAAC,KAAK,CAACC,MAAM,CAAC7C,OAAO,CAAC,CAAC;MAC1C;MACA,IAAI,CAACxC,qBAAqB,GAAGwC,OAAO,CAAC8C,SAAS;MAC9C,IAAIC,aAAa,GAAG,IAAI3H,YAAY,CAAC4H,SAAS,CAACC,SAAS,CAACjD,OAAO,CAAC8C,SAAS,EAAE9C,OAAO,CAACkD,MAAM,CAAC;MAC3F,IAAI,CAAChF,QAAQ,CAAC6E,aAAa,CAAC,CAAC,CAAC;MAC9B,IAAI,CAAChG,QAAQ,CAACoG,eAAe,CAAC,CAAC;MAC/B,IAAItD,KAAK,EAAE;QACP,IAAI,CAAC9C,QAAQ,CAAC8C,KAAK,CAAC,CAAC;MACzB;IACJ;EACJ,CAAC;EACDxD,YAAY,CAACzB,SAAS,CAACwI,kBAAkB,GAAG,YAAY;IACpD,OAAO,IAAI,CAAC5F,qBAAqB,KAAKnC,iBAAiB,CAACgI,UAAU,CAACC,KAAK,IACpE,IAAI,CAAC9F,qBAAqB,KAAKnC,iBAAiB,CAACgI,UAAU,CAACE,KAAK;EACzE,CAAC;EACDlH,YAAY,CAACzB,SAAS,CAAC4I,kBAAkB,GAAG,YAAY;IACpD,OAAO,IAAI,CAAChG,qBAAqB,KAAKnC,iBAAiB,CAACgI,UAAU,CAACI,KAAK;EAC5E,CAAC;EACD;AACJ;AACA;AACA;EACIpH,YAAY,CAACzB,SAAS,CAAC8I,gBAAgB,GAAG,UAAUrE,KAAK,EAAE;IACvD,IAAI,CAAC9B,WAAW,GAAG8B,KAAK;IACxB,OAAO,IAAI,CAACjC,gBAAgB,CAACuG,uBAAuB,CAACtE,KAAK,CAAC;EAC/D,CAAC;EACD;AACJ;AACA;EACIhD,YAAY,CAACzB,SAAS,CAACgJ,qBAAqB,GAAG,YAAY;IACvD,OAAO,IAAI,CAACxG,gBAAgB,CAACyG,sBAAsB,CAAC,CAAC;EACzD,CAAC;EACD;AACJ;AACA;AACA;EACIxH,YAAY,CAACzB,SAAS,CAACkJ,4BAA4B,GAAG,YAAY;IAC9D,OAAO,IAAI,CAAC1G,gBAAgB,CAAC0G,4BAA4B,CAAC,CAAC;EAC/D,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIzH,YAAY,CAACzB,SAAS,CAAC8H,kCAAkC,GAAG,UAAUvD,QAAQ,EAAE;IAC5E,IAAI,IAAI,CAAC4E,QAAQ,CAAC,CAAC,EAAE;MACjB,IAAI,CAACC,0BAA0B,CAAC7E,QAAQ,CAAC;MACzC,OAAO,KAAK;IAChB;IACA,OAAO,IAAI,CAAC/B,gBAAgB,CAAC6G,cAAc,CAAC9E,QAAQ,CAAC;EACzD,CAAC;EACD;AACJ;AACA;AACA;EACI9C,YAAY,CAACzB,SAAS,CAACmJ,QAAQ,GAAG,YAAY;IAC1C,OAAO,CAAC,CAAC,IAAI,CAACxG,WAAW;EAC7B,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIlB,YAAY,CAACzB,SAAS,CAACoJ,0BAA0B,GAAG,UAAU7E,QAAQ,EAAE;IACpE,IAAIA,QAAQ,IAAIA,QAAQ,CAACF,OAAO,EAAE;MAC9BE,QAAQ,CAACF,OAAO,CAAC,IAAI,CAAC1B,WAAW,CAAC;IACtC;EACJ,CAAC;EACD;AACJ;AACA;EACIlB,YAAY,CAACzB,SAAS,CAACsJ,YAAY,GAAG,YAAY;IAC9C,IAAI,CAAC9G,gBAAgB,CAAC+G,aAAa,CAAC,CAAC;EACzC,CAAC;EACD9H,YAAY,CAACzB,SAAS,CAAC4E,iBAAiB,GAAG,UAAUb,QAAQ,EAAEI,SAAS,EAAEQ,WAAW,EAAE;IACnF,IAAI,CAACxB,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,UAAU,GAAGe,SAAS;IAC3B,IAAIJ,QAAQ,EAAE;MACV,IAAIyF,aAAa,GAAGzF,QAAQ,CAACrC,MAAM;MACnC,IAAI,CAAC,IAAI,CAACQ,OAAO,CAACuH,OAAO,EAAE;QACvB,IAAI,CAACvH,OAAO,CAACuH,OAAO,GAAGD,aAAa;MACxC;IACJ;IACA,IAAI7E,WAAW,EAAE;MACbA,WAAW,CAACZ,QAAQ,CAAC;IACzB;EACJ,CAAC;EACDtC,YAAY,CAACzB,SAAS,CAAC0E,aAAa,GAAG,UAAUD,KAAK,EAAEJ,OAAO,EAAE;IAC7D,IAAI,CAAC3B,gBAAgB,CAAC+B,KAAK,CAACW,OAAO,CAAC;IACpC,IAAIf,OAAO,EAAE;MACTA,OAAO,CAACI,KAAK,CAAC;IAClB;EACJ,CAAC;EACD,OAAOhD,YAAY;AACvB,CAAC,CAAC,CAAE;AACJrB,OAAO,CAAC4C,OAAO,GAAGvB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}