{"ast":null,"code":"// src/neo4jConnection.js\nexport function executeQuery(query) {\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Basic ' + btoa(user + ':' + password)\n    },\n    body: JSON.stringify({\n      statements: [{\n        statement: query\n      }]\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).then(data => {\n    var _data$results$;\n    return ((_data$results$ = data.results[0]) === null || _data$results$ === void 0 ? void 0 : _data$results$.data) || [];\n  }) // Utilisez un accès sécurisé\n  .catch(error => {\n    console.error('Error executing query:', error);\n    throw error; // Laissez l'erreur remonter\n  });\n}\nexport function closeConnection() {\n  // Pas besoin de fermer la connexion HTTP\n}","map":{"version":3,"names":["executeQuery","query","fetch","url","method","headers","btoa","user","password","body","JSON","stringify","statements","statement","then","response","ok","Error","json","data","_data$results$","results","catch","error","console","closeConnection"],"sources":["C:/Users/gelgo/Documents/IUT/BUT3/R5.10 - Nouveaux paradigmes de BDD/cluedo-game/src/neo4jConnection.js"],"sourcesContent":["// src/neo4jConnection.js\r\nexport function executeQuery(query) {\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Basic ' + btoa(user + ':' + password)\r\n        },\r\n        body: JSON.stringify({\r\n            statements: [\r\n                {\r\n                    statement: query\r\n                }\r\n            ]\r\n        })\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(data => data.results[0]?.data || []) // Utilisez un accès sécurisé\r\n    .catch(error => {\r\n        console.error('Error executing query:', error);\r\n        throw error; // Laissez l'erreur remonter\r\n    });\r\n}\r\n\r\n\r\nexport function closeConnection() {\r\n    // Pas besoin de fermer la connexion HTTP\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,SAASA,YAAYA,CAACC,KAAK,EAAE;EAChC,OAAOC,KAAK,CAACC,GAAG,EAAE;IACdC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,QAAQ,GAAGC,IAAI,CAACC,IAAI,GAAG,GAAG,GAAGC,QAAQ;IAC1D,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBC,UAAU,EAAE,CACR;QACIC,SAAS,EAAEZ;MACf,CAAC;IAET,CAAC;EACL,CAAC,CAAC,CACDa,IAAI,CAACC,QAAQ,IAAI;IACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI;IAAA,IAAAC,cAAA;IAAA,OAAI,EAAAA,cAAA,GAAAD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,cAAAD,cAAA,uBAAfA,cAAA,CAAiBD,IAAI,KAAI,EAAE;EAAA,EAAC,CAAC;EAAA,CAC1CG,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK,CAAC,CAAC;EACjB,CAAC,CAAC;AACN;AAGA,OAAO,SAASE,eAAeA,CAAA,EAAG;EAC9B;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}