{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gelgo\\\\Documents\\\\IUT\\\\BUT3\\\\R5.10 - Nouveaux paradigmes de BDD\\\\cluedo-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport { checkHypothesis, getInitialState } from './gameLogic';\nimport './App.css';\nimport Board from './Board';\n\n// Connexions entre les salles pour déterminer les déplacements possibles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roomConnections = {\n  'Cuisine': ['Grand Salon', 'Salle à manger'],\n  'Grand Salon': ['Cuisine', 'Studio'],\n  'Véranda': ['Petit Salon'],\n  'Petit Salon': ['Véranda', 'Bibliothèque'],\n  'Studio': ['Grand Salon', 'Hall'],\n  'Hall': ['Studio', 'Bureau'],\n  'Bibliothèque': ['Petit Salon'],\n  'Salle à manger': ['Cuisine', 'Bureau'],\n  'Bureau': ['Hall', 'Salle à manger']\n};\nfunction App() {\n  _s();\n  const [suspect, setSuspect] = useState('');\n  const [weapon, setWeapon] = useState('');\n  const [room, setRoom] = useState('Cuisine'); // Salle de départ\n  const [result, setResult] = useState('');\n  const [roomsState, setRoomsState] = useState([]);\n  useEffect(() => {\n    // Appel à la fonction getInitialState pour récupérer les données initiales\n    getInitialState().then(data => {\n      console.log('Données initiales:', data); // Ajout du log\n      if (Array.isArray(data)) {\n        setRoomsState(data);\n      } else {\n        console.error('Les données reçues ne sont pas au format attendu:', data);\n      }\n    }).catch(error => {\n      console.error('Erreur lors de la récupération des données:', error);\n    });\n  }, []);\n\n  // Fonction pour gérer le déplacement dans une salle\n  const handleMove = selectedRoom => {\n    if (roomConnections[room].includes(selectedRoom)) {\n      setRoom(selectedRoom);\n    } else {\n      alert(`Vous ne pouvez pas aller directement de ${room} à ${selectedRoom}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-4\",\n      children: \"Cluedo Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      roomsState: roomsState,\n      currentRoom: room,\n      accessibleRooms: roomConnections[room],\n      onMove: handleMove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Entrez un suspect\",\n          value: suspect,\n          onChange: e => setSuspect(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Entrez une arme\",\n          value: weapon,\n          onChange: e => setWeapon(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Entrez une salle\",\n          value: room,\n          onChange: e => setRoom(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1sNJwu7WERW1v4pHUC0JusmvexU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Form","checkHypothesis","getInitialState","Board","jsxDEV","_jsxDEV","roomConnections","App","_s","suspect","setSuspect","weapon","setWeapon","room","setRoom","result","setResult","roomsState","setRoomsState","then","data","console","log","Array","isArray","error","catch","handleMove","selectedRoom","includes","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","currentRoom","accessibleRooms","onMove","Group","Control","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/gelgo/Documents/IUT/BUT3/R5.10 - Nouveaux paradigmes de BDD/cluedo-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport { checkHypothesis, getInitialState } from './gameLogic';\nimport './App.css';\nimport Board from './Board';\n\n// Connexions entre les salles pour déterminer les déplacements possibles\nconst roomConnections = {\n  'Cuisine': ['Grand Salon', 'Salle à manger'],\n  'Grand Salon': ['Cuisine', 'Studio'],\n  'Véranda': ['Petit Salon'],\n  'Petit Salon': ['Véranda', 'Bibliothèque'],\n  'Studio': ['Grand Salon', 'Hall'],\n  'Hall': ['Studio', 'Bureau'],\n  'Bibliothèque': ['Petit Salon'],\n  'Salle à manger': ['Cuisine', 'Bureau'],\n  'Bureau': ['Hall', 'Salle à manger'],\n};\n\nfunction App() {\n  const [suspect, setSuspect] = useState('');\n  const [weapon, setWeapon] = useState('');\n  const [room, setRoom] = useState('Cuisine'); // Salle de départ\n  const [result, setResult] = useState('');\n  const [roomsState, setRoomsState] = useState([]);\n\n  useEffect(() => {\n    // Appel à la fonction getInitialState pour récupérer les données initiales\n    getInitialState().then((data) => {\n      console.log('Données initiales:', data); // Ajout du log\n      if (Array.isArray(data)) {\n        setRoomsState(data);\n      } else {\n        console.error('Les données reçues ne sont pas au format attendu:', data);\n      }\n    }).catch(error => {\n      console.error('Erreur lors de la récupération des données:', error);\n    });\n  }, []);\n\n  // Fonction pour gérer le déplacement dans une salle\n  const handleMove = (selectedRoom) => {\n    if (roomConnections[room].includes(selectedRoom)) {\n      setRoom(selectedRoom);\n    } else {\n      alert(`Vous ne pouvez pas aller directement de ${room} à ${selectedRoom}`);\n    }\n  };\n\n  return (\n    <Container>\n      <h1 className=\"text-center my-4\">Cluedo Game</h1>\n\n      {/* Intégrer le plateau */}\n      <Board \n        roomsState={roomsState} \n        currentRoom={room} \n        accessibleRooms={roomConnections[room]} \n        onMove={handleMove}\n      />\n\n      {/* Formulaire pour vérifier une hypothèse */}\n      <Form>\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Entrez un suspect\"\n            value={suspect}\n            onChange={(e) => setSuspect(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Entrez une arme\"\n            value={weapon}\n            onChange={(e) => setWeapon(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Entrez une salle\"\n            value={room}\n            onChange={(e) => setRoom(e.target.value)}\n          />\n        </Form.Group>\n      </Form>\n\n      <p className=\"mt-3\">{result}</p>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}