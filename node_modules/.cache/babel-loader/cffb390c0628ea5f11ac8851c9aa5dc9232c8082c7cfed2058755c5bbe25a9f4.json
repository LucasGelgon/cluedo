{"ast":null,"code":"// src/neo4jConnection.js\nconst url = 'http://localhost:7474/db/neo4j/tx/commit'; // Assurez-vous que cette URL est correcte pour votre configuration Neo4j\nconst user = 'neo4j';\nconst password = 'lecluedo';\n\n// Fonction pour exécuter une requête Neo4j via HTTP\nexport function executeQuery(query) {\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Basic ' + btoa(user + ':' + password) // Encodage de l'utilisateur et du mot de passe en base64\n    },\n    body: JSON.stringify({\n      statements: [{\n        statement: query\n      }]\n    })\n  }).then(response => response.json()).then(data => data.results[0].data) // Assurez-vous que cela correspond à la structure de la réponse\n  .catch(error => {\n    console.error('Error executing query:', error);\n    throw error;\n  });\n}\nexport function closeConnection() {\n  // Pas besoin de fermer la connexion HTTP\n}","map":{"version":3,"names":["url","user","password","executeQuery","query","fetch","method","headers","btoa","body","JSON","stringify","statements","statement","then","response","json","data","results","catch","error","console","closeConnection"],"sources":["C:/Users/gelgo/Documents/IUT/BUT3/R5.10 - Nouveaux paradigmes de BDD/cluedo-game/src/neo4jConnection.js"],"sourcesContent":["// src/neo4jConnection.js\r\nconst url = 'http://localhost:7474/db/neo4j/tx/commit'; // Assurez-vous que cette URL est correcte pour votre configuration Neo4j\r\nconst user = 'neo4j';\r\nconst password = 'lecluedo';\r\n\r\n// Fonction pour exécuter une requête Neo4j via HTTP\r\nexport function executeQuery(query) {\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Basic ' + btoa(user + ':' + password) // Encodage de l'utilisateur et du mot de passe en base64\r\n        },\r\n        body: JSON.stringify({\r\n            statements: [\r\n                {\r\n                    statement: query\r\n                }\r\n            ]\r\n        })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => data.results[0].data) // Assurez-vous que cela correspond à la structure de la réponse\r\n    .catch(error => {\r\n        console.error('Error executing query:', error);\r\n        throw error;\r\n    });\r\n}\r\n\r\nexport function closeConnection() {\r\n    // Pas besoin de fermer la connexion HTTP\r\n}\r\n"],"mappings":"AAAA;AACA,MAAMA,GAAG,GAAG,0CAA0C,CAAC,CAAC;AACxD,MAAMC,IAAI,GAAG,OAAO;AACpB,MAAMC,QAAQ,GAAG,UAAU;;AAE3B;AACA,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAChC,OAAOC,KAAK,CAACL,GAAG,EAAE;IACdM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,QAAQ,GAAGC,IAAI,CAACP,IAAI,GAAG,GAAG,GAAGC,QAAQ,CAAC,CAAC;IAC5D,CAAC;IACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBC,UAAU,EAAE,CACR;QACIC,SAAS,EAAET;MACf,CAAC;IAET,CAAC;EACL,CAAC,CAAC,CACDU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI,CAAC,CAAC;EAAA,CACnCE,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf,CAAC,CAAC;AACN;AAEA,OAAO,SAASE,eAAeA,CAAA,EAAG;EAC9B;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}