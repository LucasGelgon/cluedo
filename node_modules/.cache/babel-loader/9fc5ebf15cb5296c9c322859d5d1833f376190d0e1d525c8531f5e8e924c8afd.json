{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gelgo\\\\Documents\\\\IUT\\\\BUT3\\\\R5.10 - Nouveaux paradigmes de BDD\\\\cluedo-game\\\\src\\\\Board.js\";\n// src/Board.js\nimport React from 'react';\nimport './Board.css'; // Assure-toi de créer ce fichier CSS pour le style\n\n// Import des illustrations des salles\nimport cuisineImage from './img/cuisine.jpg';\nimport salonImage from './img/salon.jpg';\nimport verandaImage from './img/veranda.jpg';\nimport grandSalonImage from './img/grand_salon.jpg';\nimport petitSalonImage from './img/petit_salon.jpg';\nimport studioImage from './img/studio.jpg';\nimport hallImage from './img/hall.jpg';\nimport bibliothequeImage from './img/bibliotheque.jpg';\nimport salleAMangerImage from './img/salle_a_manger.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roomImages = {\n  'Cuisine': cuisineImage,\n  'Grand Salon': salonImage,\n  'Veranda': verandaImage\n  // Ajoute les autres correspondances ici...\n};\nconst Board = ({\n  roomsState\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: roomsState.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: room.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: roomImages[room.name] || 'default.jpg',\n        alt: room.name,\n        className: \"room-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), room.occupants.length > 0 ? room.occupants.map((person, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [person.name, \" (\", person.color, \")\"]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucun occupant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","cuisineImage","salonImage","verandaImage","grandSalonImage","petitSalonImage","studioImage","hallImage","bibliothequeImage","salleAMangerImage","jsxDEV","_jsxDEV","roomImages","Board","roomsState","className","children","map","room","index","name","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","occupants","length","person","idx","color","_c","$RefreshReg$"],"sources":["C:/Users/gelgo/Documents/IUT/BUT3/R5.10 - Nouveaux paradigmes de BDD/cluedo-game/src/Board.js"],"sourcesContent":["// src/Board.js\r\nimport React from 'react';\r\nimport './Board.css'; // Assure-toi de créer ce fichier CSS pour le style\r\n\r\n// Import des illustrations des salles\r\nimport cuisineImage from './img/cuisine.jpg';\r\nimport salonImage from './img/salon.jpg';\r\nimport verandaImage from './img/veranda.jpg';\r\nimport grandSalonImage from './img/grand_salon.jpg';\r\nimport petitSalonImage from './img/petit_salon.jpg';\r\nimport studioImage from './img/studio.jpg';\r\nimport hallImage from './img/hall.jpg';\r\nimport bibliothequeImage from './img/bibliotheque.jpg';\r\nimport salleAMangerImage from './img/salle_a_manger.jpg';\r\n\r\nconst roomImages = {\r\n  'Cuisine': cuisineImage,\r\n  'Grand Salon': salonImage,\r\n  'Veranda': verandaImage,\r\n  // Ajoute les autres correspondances ici...\r\n};\r\n\r\nconst Board = ({ roomsState }) => {\r\n  return (\r\n    <div className=\"board\">\r\n      {roomsState.map((room, index) => (\r\n        <div key={index} className=\"room\">\r\n          <h3>{room.name}</h3>\r\n          <img \r\n            src={roomImages[room.name] || 'default.jpg'} \r\n            alt={room.name} \r\n            className=\"room-image\" \r\n          />\r\n          {room.occupants.length > 0 ? (\r\n            room.occupants.map((person, idx) => (\r\n              <p key={idx}>\r\n                {person.name} ({person.color})\r\n              </p>\r\n            ))\r\n          ) : (\r\n            <p>Aucun occupant</p>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa,CAAC,CAAC;;AAEtB;AACA,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,eAAe,MAAM,uBAAuB;AACnD,OAAOC,eAAe,MAAM,uBAAuB;AACnD,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,iBAAiB,MAAM,wBAAwB;AACtD,OAAOC,iBAAiB,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAG;EACjB,SAAS,EAAEX,YAAY;EACvB,aAAa,EAAEC,UAAU;EACzB,SAAS,EAAEC;EACX;AACF,CAAC;AAED,MAAMU,KAAK,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAChC,oBACEH,OAAA;IAAKI,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBF,UAAU,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BR,OAAA;MAAiBI,SAAS,EAAC,MAAM;MAAAC,QAAA,gBAC/BL,OAAA;QAAAK,QAAA,EAAKE,IAAI,CAACE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBb,OAAA;QACEc,GAAG,EAAEb,UAAU,CAACM,IAAI,CAACE,IAAI,CAAC,IAAI,aAAc;QAC5CM,GAAG,EAAER,IAAI,CAACE,IAAK;QACfL,SAAS,EAAC;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,EACDN,IAAI,CAACS,SAAS,CAACC,MAAM,GAAG,CAAC,GACxBV,IAAI,CAACS,SAAS,CAACV,GAAG,CAAC,CAACY,MAAM,EAAEC,GAAG,kBAC7BnB,OAAA;QAAAK,QAAA,GACGa,MAAM,CAACT,IAAI,EAAC,IAAE,EAACS,MAAM,CAACE,KAAK,EAAC,GAC/B;MAAA,GAFQD,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACJ,CAAC,gBAEFb,OAAA;QAAAK,QAAA,EAAG;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACrB;IAAA,GAfOL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACQ,EAAA,GAxBInB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}