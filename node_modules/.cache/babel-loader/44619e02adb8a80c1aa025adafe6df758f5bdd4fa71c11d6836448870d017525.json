{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gelgo\\\\Documents\\\\IUT\\\\BUT3\\\\R5.10 - Nouveaux paradigmes de BDD\\\\cluedo-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Button, Form } from 'react-bootstrap';\nimport { checkHypothesis, getInitialState } from './gameLogic';\nimport './App.css';\nimport Board from './Board';\n\n// Connexions entre salles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roomConnections = {\n  'Cuisine': ['Grand Salon', 'Salle à manger'],\n  'Grand Salon': ['Cuisine', 'Studio'],\n  'Véranda': ['Petit Salon'],\n  'Petit Salon': ['Véranda', 'Bibliothèque'],\n  'Studio': ['Grand Salon', 'Hall'],\n  'Hall': ['Studio', 'Bureau'],\n  'Bibliothèque': ['Petit Salon'],\n  'Salle à manger': ['Cuisine', 'Bureau'],\n  'Bureau': ['Hall', 'Salle à manger']\n};\nfunction App() {\n  _s();\n  const [suspect, setSuspect] = useState('');\n  const [weapon, setWeapon] = useState('');\n  const [room, setRoom] = useState('');\n  const [result, setResult] = useState('');\n  const [roomsState, setRoomsState] = useState([]);\n  const [playerRoom, setPlayerRoom] = useState('Cuisine');\n  const [aiRooms, setAiRooms] = useState(['Grand Salon', 'Véranda', 'Petit Salon']);\n  useEffect(() => {\n    // Appel à la fonction getInitialState pour récupérer les données initiales\n    getInitialState().then(data => {\n      console.log('Données initiales:', data); // Ajout du log\n      if (Array.isArray(data)) {\n        setRoomsState(data);\n      } else {\n        console.error('Les données reçues ne sont pas au format attendu:', data);\n      }\n    }).catch(error => {\n      console.error('Erreur lors de la récupération des données:', error);\n    });\n  }, []);\n\n  // Déplacer le joueur vers une nouvelle salle\n  const movePlayer = newRoom => {\n    setPlayerRoom(newRoom);\n    moveAIPlayers();\n  };\n\n  // Déplacer les joueurs IA vers des salles aléatoires adjacentes\n  const moveAIPlayers = () => {\n    const newAIRooms = aiRooms.map(aiRoom => {\n      const possibleMoves = roomConnections[aiRoom];\n      const randomMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n      return randomMove;\n    });\n    setAiRooms(newAIRooms);\n  };\n  const handleCheckHypothesis = () => {\n    checkHypothesis(suspect, weapon, playerRoom).then(isCorrect => {\n      setResult(isCorrect ? \"Hypothèse correcte !\" : \"Hypothèse incorrecte.\");\n    }).catch(error => {\n      console.error('Erreur lors de la vérification de l\\'hypothèse:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-4\",\n      children: \"Cluedo Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      roomsState: roomsState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-info my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Vous \\xEAtes dans : \", playerRoom]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Salles accessibles :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), roomConnections[playerRoom].map(room => /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          className: \"m-2\",\n          onClick: () => movePlayer(room),\n          children: [\"Aller \\xE0 \", room]\n        }, room, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Entrez un suspect\",\n          value: suspect,\n          onChange: e => setSuspect(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Entrez une arme\",\n          value: weapon,\n          onChange: e => setWeapon(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleCheckHypothesis,\n        children: \"V\\xE9rifier l'hypoth\\xE8se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-info my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Position des autres joueurs :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: aiRooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Joueur IA \", index + 1, \" est dans \", room]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uUZbOJm9a/axB3xFhwCikC32LnM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Button","Form","checkHypothesis","getInitialState","Board","jsxDEV","_jsxDEV","roomConnections","App","_s","suspect","setSuspect","weapon","setWeapon","room","setRoom","result","setResult","roomsState","setRoomsState","playerRoom","setPlayerRoom","aiRooms","setAiRooms","then","data","console","log","Array","isArray","error","catch","movePlayer","newRoom","moveAIPlayers","newAIRooms","map","aiRoom","possibleMoves","randomMove","Math","floor","random","length","handleCheckHypothesis","isCorrect","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","Group","Control","type","placeholder","value","onChange","e","target","index","_c","$RefreshReg$"],"sources":["C:/Users/gelgo/Documents/IUT/BUT3/R5.10 - Nouveaux paradigmes de BDD/cluedo-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Button, Form } from 'react-bootstrap';\nimport { checkHypothesis, getInitialState } from './gameLogic';\nimport './App.css';\nimport Board from './Board';\n\n// Connexions entre salles\nconst roomConnections = {\n  'Cuisine': ['Grand Salon', 'Salle à manger'],\n  'Grand Salon': ['Cuisine', 'Studio'],\n  'Véranda': ['Petit Salon'],\n  'Petit Salon': ['Véranda', 'Bibliothèque'],\n  'Studio': ['Grand Salon', 'Hall'],\n  'Hall': ['Studio', 'Bureau'],\n  'Bibliothèque': ['Petit Salon'],\n  'Salle à manger': ['Cuisine', 'Bureau'],\n  'Bureau': ['Hall', 'Salle à manger'],\n};\n\nfunction App() {\n  const [suspect, setSuspect] = useState('');\n  const [weapon, setWeapon] = useState('');\n  const [room, setRoom] = useState('');\n  const [result, setResult] = useState('');\n  const [roomsState, setRoomsState] = useState([]);\n  const [playerRoom, setPlayerRoom] = useState('Cuisine');\n  const [aiRooms, setAiRooms] = useState(['Grand Salon', 'Véranda', 'Petit Salon']);\n\n  useEffect(() => {\n    // Appel à la fonction getInitialState pour récupérer les données initiales\n    getInitialState().then((data) => {\n      console.log('Données initiales:', data); // Ajout du log\n      if (Array.isArray(data)) {\n        setRoomsState(data);\n      } else {\n        console.error('Les données reçues ne sont pas au format attendu:', data);\n      }\n    }).catch(error => {\n      console.error('Erreur lors de la récupération des données:', error);\n    });\n  }, []);\n\n  // Déplacer le joueur vers une nouvelle salle\n  const movePlayer = (newRoom) => {\n    setPlayerRoom(newRoom);\n    moveAIPlayers();\n  };\n\n  // Déplacer les joueurs IA vers des salles aléatoires adjacentes\n  const moveAIPlayers = () => {\n    const newAIRooms = aiRooms.map(aiRoom => {\n      const possibleMoves = roomConnections[aiRoom];\n      const randomMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n      return randomMove;\n    });\n    setAiRooms(newAIRooms);\n  };\n\n  const handleCheckHypothesis = () => {\n    checkHypothesis(suspect, weapon, playerRoom).then(isCorrect => {\n      setResult(isCorrect ? \"Hypothèse correcte !\" : \"Hypothèse incorrecte.\");\n    }).catch(error => {\n      console.error('Erreur lors de la vérification de l\\'hypothèse:', error);\n    });\n  };\n\n  return (\n    <Container>\n      <h1 className=\"text-center my-4\">Cluedo Game</h1>\n\n      {/* Intégrer le plateau */}\n      <Board roomsState={roomsState} />\n\n      {/* Déplacement du joueur */}\n      <div className=\"player-info my-4\">\n        <h2>Vous êtes dans : {playerRoom}</h2>\n        <div>\n          <h3>Salles accessibles :</h3>\n          {roomConnections[playerRoom].map(room => (\n            <Button key={room} variant=\"secondary\" className=\"m-2\" onClick={() => movePlayer(room)}>\n              Aller à {room}\n            </Button>\n          ))}\n        </div>\n      </div>\n\n      {/* Formulaire pour vérifier une hypothèse */}\n      <Form>\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Entrez un suspect\"\n            value={suspect}\n            onChange={(e) => setSuspect(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Entrez une arme\"\n            value={weapon}\n            onChange={(e) => setWeapon(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" onClick={handleCheckHypothesis}>\n          Vérifier l'hypothèse\n        </Button>\n      </Form>\n\n      <p className=\"mt-3\">{result}</p>\n\n      {/* Positions des autres joueurs */}\n      <div className=\"ai-info my-4\">\n        <h3>Position des autres joueurs :</h3>\n        <ul>\n          {aiRooms.map((room, index) => (\n            <li key={index}>Joueur IA {index + 1} est dans {room}</li>\n          ))}\n        </ul>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}