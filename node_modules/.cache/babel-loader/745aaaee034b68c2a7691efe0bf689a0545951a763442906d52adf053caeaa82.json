{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gelgo\\\\Documents\\\\IUT\\\\BUT3\\\\R5.10 - Nouveaux paradigmes de BDD\\\\cluedo-game\\\\src\\\\Board.js\";\n// src/Board.js\nimport React from 'react';\nimport './Board.css';\n\n// Dictionnaire des images associées à chaque salle\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roomImages = {\n  'Cuisine': '/img/cuisine.jpg',\n  'Grand Salon': '/img/grand_salon.jpg',\n  'Véranda': '/img/veranda.jpg',\n  'Petit Salon': '/img/petit_salon.jpg',\n  'Studio': '/img/studio.jpg',\n  'Hall': '/img/hall.jpg',\n  'Bibliothèque': '/img/bibliotheque.jpg',\n  'Salle à manger': '/img/salle_a_manger.jpg',\n  'Bureau': '/img/bureau.jpg'\n};\nconst Board = ({\n  roomsState = []\n}) => {\n  console.log('roomsState dans Board:', roomsState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: roomsState.map((room, index) => {\n      const roomName = room.name; // Récupérer le nom de la salle\n      console.log('Nom de la salle:', roomName); // Log du nom de la salle\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: roomImages[roomName],\n          alt: roomName,\n          className: \"room-image\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = ''; // Pas d'image par défaut\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","roomImages","Board","roomsState","console","log","className","children","map","room","index","roomName","name","src","alt","onError","e","target","onerror","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gelgo/Documents/IUT/BUT3/R5.10 - Nouveaux paradigmes de BDD/cluedo-game/src/Board.js"],"sourcesContent":["// src/Board.js\r\nimport React from 'react';\r\nimport './Board.css'; \r\n\r\n// Dictionnaire des images associées à chaque salle\r\nconst roomImages = {\r\n  'Cuisine': '/img/cuisine.jpg',\r\n  'Grand Salon': '/img/grand_salon.jpg',\r\n  'Véranda': '/img/veranda.jpg',\r\n  'Petit Salon': '/img/petit_salon.jpg',\r\n  'Studio': '/img/studio.jpg',\r\n  'Hall': '/img/hall.jpg',\r\n  'Bibliothèque': '/img/bibliotheque.jpg',\r\n  'Salle à manger': '/img/salle_a_manger.jpg',\r\n  'Bureau': '/img/bureau.jpg',\r\n};\r\n\r\nconst Board = ({ roomsState = [] }) => {\r\n  console.log('roomsState dans Board:', roomsState);\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      {roomsState.map((room, index) => {\r\n        const roomName = room.name; // Récupérer le nom de la salle\r\n        console.log('Nom de la salle:', roomName); // Log du nom de la salle\r\n\r\n        return (\r\n          <div key={index} className=\"room\">\r\n            <img \r\n              src={roomImages[roomName]} \r\n              alt={roomName} \r\n              className=\"room-image\" \r\n              onError={(e) => {\r\n                e.target.onerror = null;\r\n                e.target.src = ''; // Pas d'image par défaut\r\n              }}\r\n            />\r\n            <h3>{roomName}</h3>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG;EACjB,SAAS,EAAE,kBAAkB;EAC7B,aAAa,EAAE,sBAAsB;EACrC,SAAS,EAAE,kBAAkB;EAC7B,aAAa,EAAE,sBAAsB;EACrC,QAAQ,EAAE,iBAAiB;EAC3B,MAAM,EAAE,eAAe;EACvB,cAAc,EAAE,uBAAuB;EACvC,gBAAgB,EAAE,yBAAyB;EAC3C,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,KAAK,GAAGA,CAAC;EAAEC,UAAU,GAAG;AAAG,CAAC,KAAK;EACrCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,UAAU,CAAC;EAEjD,oBACEH,OAAA;IAAKM,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBJ,UAAU,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC/B,MAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAI,CAAC,CAAC;MAC5BR,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEM,QAAQ,CAAC,CAAC,CAAC;;MAE3C,oBACEX,OAAA;QAAiBM,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAC/BP,OAAA;UACEa,GAAG,EAAEZ,UAAU,CAACU,QAAQ,CAAE;UAC1BG,GAAG,EAAEH,QAAS;UACdL,SAAS,EAAC,YAAY;UACtBS,OAAO,EAAGC,CAAC,IAAK;YACdA,CAAC,CAACC,MAAM,CAACC,OAAO,GAAG,IAAI;YACvBF,CAAC,CAACC,MAAM,CAACJ,GAAG,GAAG,EAAE,CAAC,CAAC;UACrB;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFtB,OAAA;UAAAO,QAAA,EAAKI;QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAVXZ,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWV,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA1BIrB,KAAK;AA4BX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}