{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gelgo\\\\Documents\\\\IUT\\\\BUT3\\\\R5.10 - Nouveaux paradigmes de BDD\\\\cluedo-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Button, Form } from 'react-bootstrap';\nimport { checkHypothesis, getInitialState } from './gameLogic';\nimport './App.css';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [suspect, setSuspect] = useState('');\n  const [weapon, setWeapon] = useState('');\n  const [room, setRoom] = useState('');\n  const [result, setResult] = useState('');\n  const [roomsState, setRoomsState] = useState([]);\n  const [playerPosition, setPlayerPosition] = useState('');\n  const [aiPositions, setAiPositions] = useState([{\n    name: 'IA 1',\n    room: 'Cuisine'\n  }, {\n    name: 'IA 2',\n    room: 'Hall'\n  }, {\n    name: 'IA 3',\n    room: 'Bureau'\n  }]);\n  useEffect(() => {\n    getInitialState().then(data => {\n      if (Array.isArray(data)) {\n        setRoomsState(data);\n      }\n    });\n  }, []);\n  const handleMovePlayer = newRoom => {\n    setPlayerPosition(newRoom);\n    moveAI();\n  };\n  const moveAI = () => {\n    const accessibleRooms = getAccessibleRooms(playerPosition);\n    const updatedAiPositions = aiPositions.map(ai => ({\n      ...ai,\n      room: accessibleRooms[Math.floor(Math.random() * accessibleRooms.length)]\n    }));\n    setAiPositions(updatedAiPositions);\n  };\n  const getAccessibleRooms = currentRoom => {\n    // Implémenter la logique pour déterminer les salles accessibles à partir de currentRoom\n    // Par exemple, cela pourrait être un tableau de salles adjacentes\n    // Pour simplifier, supposons que toutes les salles sont accessibles\n    return ['Cuisine', 'Grand Salon', 'Véranda', 'Petit Salon', 'Studio', 'Hall', 'Bibliothèque', 'Salle à manger', 'Bureau'].filter(room => room !== currentRoom); // Exclure la salle actuelle\n  };\n  const handleCheckHypothesis = () => {\n    checkHypothesis(suspect, weapon, room).then(isCorrect => {\n      setResult(isCorrect ? \"Hypothèse correcte !\" : \"Hypothèse incorrecte.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-4\",\n      children: \"Cluedo Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      roomsState: roomsState,\n      playerPosition: playerPosition,\n      setPlayerPosition: handleMovePlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Positions des IA :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: aiPositions.map((ai, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [ai.name, \" est dans la \", ai.room]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Entrez un suspect\",\n          value: suspect,\n          onChange: e => setSuspect(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Entrez une arme\",\n          value: weapon,\n          onChange: e => setWeapon(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Entrez une salle\",\n          value: room,\n          onChange: e => setRoom(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleCheckHypothesis,\n        children: \"V\\xE9rifier l'hypoth\\xE8se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fUKO8r6iaBHucL0w5szUDmdqsj0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Button","Form","checkHypothesis","getInitialState","Board","jsxDEV","_jsxDEV","App","_s","suspect","setSuspect","weapon","setWeapon","room","setRoom","result","setResult","roomsState","setRoomsState","playerPosition","setPlayerPosition","aiPositions","setAiPositions","name","then","data","Array","isArray","handleMovePlayer","newRoom","moveAI","accessibleRooms","getAccessibleRooms","updatedAiPositions","map","ai","Math","floor","random","length","currentRoom","filter","handleCheckHypothesis","isCorrect","children","className","fileName","_jsxFileName","lineNumber","columnNumber","index","Group","Control","type","placeholder","value","onChange","e","target","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gelgo/Documents/IUT/BUT3/R5.10 - Nouveaux paradigmes de BDD/cluedo-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Button, Form } from 'react-bootstrap';\nimport { checkHypothesis, getInitialState } from './gameLogic';\nimport './App.css';\nimport Board from './Board';\n\nfunction App() {\n  const [suspect, setSuspect] = useState('');\n  const [weapon, setWeapon] = useState('');\n  const [room, setRoom] = useState('');\n  const [result, setResult] = useState('');\n  const [roomsState, setRoomsState] = useState([]);\n  const [playerPosition, setPlayerPosition] = useState('');\n  const [aiPositions, setAiPositions] = useState([\n    { name: 'IA 1', room: 'Cuisine' },\n    { name: 'IA 2', room: 'Hall' },\n    { name: 'IA 3', room: 'Bureau' },\n  ]);\n\n  useEffect(() => {\n    getInitialState().then((data) => {\n      if (Array.isArray(data)) {\n        setRoomsState(data);\n      }\n    });\n  }, []);\n\n  const handleMovePlayer = (newRoom) => {\n    setPlayerPosition(newRoom);\n    moveAI();\n  };\n\n  const moveAI = () => {\n    const accessibleRooms = getAccessibleRooms(playerPosition);\n    const updatedAiPositions = aiPositions.map(ai => ({\n      ...ai,\n      room: accessibleRooms[Math.floor(Math.random() * accessibleRooms.length)]\n    }));\n    setAiPositions(updatedAiPositions);\n  };\n\n  const getAccessibleRooms = (currentRoom) => {\n    // Implémenter la logique pour déterminer les salles accessibles à partir de currentRoom\n    // Par exemple, cela pourrait être un tableau de salles adjacentes\n    // Pour simplifier, supposons que toutes les salles sont accessibles\n    return [\n      'Cuisine', 'Grand Salon', 'Véranda', \n      'Petit Salon', 'Studio', 'Hall', \n      'Bibliothèque', 'Salle à manger', 'Bureau'\n    ].filter(room => room !== currentRoom); // Exclure la salle actuelle\n  };\n\n  const handleCheckHypothesis = () => {\n    checkHypothesis(suspect, weapon, room).then(isCorrect => {\n      setResult(isCorrect ? \"Hypothèse correcte !\" : \"Hypothèse incorrecte.\");\n    });\n  };\n\n  return (\n    <Container>\n      <h1 className=\"text-center my-4\">Cluedo Game</h1>\n\n      {/* Intégrer le plateau */}\n      <Board \n        roomsState={roomsState} \n        playerPosition={playerPosition} \n        setPlayerPosition={handleMovePlayer} \n      />\n\n      {/* Afficher les positions des IA */}\n      <div className=\"mt-4\">\n        <h2>Positions des IA :</h2>\n        <ul>\n          {aiPositions.map((ai, index) => (\n            <li key={index}>{ai.name} est dans la {ai.room}</li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Formulaire pour vérifier une hypothèse */}\n      <Form>\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Entrez un suspect\"\n            value={suspect}\n            onChange={(e) => setSuspect(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Entrez une arme\"\n            value={weapon}\n            onChange={(e) => setWeapon(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Entrez une salle\"\n            value={room}\n            onChange={(e) => setRoom(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" onClick={handleCheckHypothesis}>\n          Vérifier l'hypothèse\n        </Button>\n      </Form>\n\n      <p className=\"mt-3\">{result}</p>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}